<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/10/2018 10:28:28 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PARAIXI8265P"
  DTS:CreatorName="HCA\IXI8265"
  DTS:DTSID="{D94CA733-74BD-4183-8C4F-464232A81F2C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.92"
  DTS:LocaleID="1033"
  DTS:ObjectName="InitializePlanViewDB"
  DTS:PackageType="5"
  DTS:VersionBuild="31"
  DTS:VersionGUID="{E4DC872E-2BB4-4EBF-944A-DC9CF3F0F274}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SQL Create bpg_milestones view"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F93BD646-78FB-4065-BED0-6DFDACE0CD44}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create bpg_milestones view"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="drop VIEW [dbo].[bpg_milestones]&#xA;go&#xA;create VIEW [dbo].[bpg_milestones]&#xA;AS &#xA;&#xA;WITH ParallonProjects &#xA;AS (&#xA;&#x9;SELECT&#x9;st.anc_code  &#xA;&#x9;&#x9;&#x9;, st.dsc_code AS ppl_code&#xA;&#x9;&#x9;&#x9;, s.[description] AS project_name&#xA;&#x9;&#x9;&#x9;--, u.full_name AS project_manager&#xA;&#x9;FROM&#x9;[hcaprod_copy].ip.structure_tree st &#xA;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].ip.structure s &#xA;&#x9;&#x9;&#x9;&#x9;ON st.dsc_code = s.structure_code&#xA;&#x9;&#x9;&#x9;inner join PerViewDataMart.dbo.Mapping m  &#xA;&#x9;&#x9;&#x9;&#x9;on st.dsc_code = m.ppl_code&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;WHERE&#x9;anc_code in ( '3017', '232', '7849')   -- 3017 = parallon BPG   232 = IT&amp;S  7849 = Healthtrust&#xA;&#x9;&#x9;&#x9;AND s.depth = 6    -- 124 rows&#xA;),&#xA;&#xA;milestones AS (&#xA;SELECT   pe.short_name AS 'project_id'&#xA;&#x9;&#x9;,pe.[planning_code] as 'task_id'&#xA;&#x9;    ,(select s.[description] from [hcaprod_copy].[ip].structure s where pe.planning_code = s.structure_code) as 'task_description'&#xA;&#x9;&#x9;,(select s.depth from [hcaprod_copy].[ip].structure s where pe.planning_code = s.structure_code) as 'depth'&#xA;&#x9;&#x9;,(select s.father_code from [hcaprod_copy].[ip].structure s where pe.planning_code = s.structure_code) as 'father_code'&#xA;&#x9;&#x9;,(select description from [hcaprod_copy].ip.structure s where s1.father_code = s.structure_code) as 'Parent Task'&#xA;&#x9;&#x9;,pe.[schedule_start]&#xA;&#x9;&#x9;,pe.[schedule_finish]&#xA;&#x9;&#x9;,pe.[actual_start]&#xA;&#x9;&#x9;,pe.[actual_finish]&#xA;&#x9;&#x9;,pe.[ppl_code]&#xA;&#x9;&#x9;,pe.[milestone]&#xA;&#x9;&#x9;,pe.[deliverables_ind]&#xA;&#x9;&#x9;,[early_start]&#xA;        ,[early_finish]&#xA;        ,[late_start]&#xA;        ,[late_finish]&#xA;        ,[free_float]&#xA;        ,[total_float]&#xA;        ,[reschedule_needed]&#xA;FROM&#x9;[hcaprod_copy].[ip].[planning_entity] pe&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s1&#xA;&#x9;&#x9;&#x9;ON pe.planning_code = s1.structure_code&#xA;WHERE&#x9;ppl_code IN (select ppl_code from ParallonProjects)&#xA;&#x9;&#x9;and pe.[milestone] = 'Y'&#xA;)&#xA;&#xA;&#xA;SELECT    [project_id]&#xA;&#x9;&#x9; ,[ppl_code]&#xA;&#x9;     ,[task_id]&#xA;&#x9;&#x9; ,[task_description]&#xA;&#x9;&#x9; ,[depth]&#xA;&#x9;&#x9; ,[father_code]&#xA;&#x9;&#x9; ,[Parent Task]&#xA;&#x9;     ,[schedule_start]&#xA;&#x9;     ,[schedule_finish]&#xA;--&#x9;     ,[actual_start]&#xA;&#x9;     ,[actual_finish]&#xA;&#x9;     ,MAX(case when [actual_finish] is not null then 'Yes' else 'No' end) as 'TaskIsCompleted'&#xA;&#x9;     ,MAX(case when [schedule_start] &lt; getDate() then 'Yes' else 'No' end) as 'TaskIsScheduled'&#xA;--&#x9;     ,MAX(case when [early_finish] = [late_finish] then 1 else 0 end) as 'Critical Path'&#xA;--       ,MAX(case when [reschedule_needed] = 'Y' then 1 else 0 end) as 'reschedule_needed'&#xA;FROM&#x9; milestones&#xA;WHERE&#x9; [schedule_start] is not null&#xA;&#x9;&#x9; and [actual_finish] is null&#xA;GROUP BY  [project_id]&#xA;&#x9;&#x9; ,[ppl_code]&#xA;&#x9;     ,[task_id] &#xA;&#x9;&#x9; ,[task_description]&#xA;&#x9;&#x9; ,[depth]&#xA;&#x9;&#x9; ,[father_code]&#xA;&#x9;&#x9; ,[Parent Task]&#xA;&#x9;&#x9; ,[schedule_start]&#xA;&#x9;&#x9; ,[schedule_finish]&#xA;--&#x9;&#x9; ,[actual_start]&#xA;&#x9;&#x9; ,[actual_finish]&#xA;&#x9;&#x9; ,[ppl_code]&#xA;--&#x9;&#x9; ,[reschedule_needed]&#xA;&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Create dim_task View"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A24FB0A9-0E52-4C8D-AE12-124E7E8C504B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create dim_task View"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="drop view  [dbo].[dim_task]&#xA;go&#xA;create VIEW [dbo].[dim_task]&#xA;&#xA;AS &#xA;&#xA;&#xA;WITH restore_date AS &#xA;&#xA;( select getDate() as  last_restore_date&#xA;),&#xA;&#xA;&#xA;ParallonProjects &#xA;AS (&#xA;&#x9;SELECT&#x9;st.anc_code  &#xA;&#x9;&#x9;&#x9;, st.dsc_code AS ppl_code&#xA;&#x9;&#x9;&#x9;, s.[description] AS project_name&#xA;&#x9;&#x9;&#x9;--, u.full_name AS project_manager&#xA;&#x9;FROM&#x9;[hcaprod_copy].ip.structure_tree st &#xA;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].ip.structure s &#xA;&#x9;&#x9;&#x9;&#x9;ON st.dsc_code = s.structure_code&#xA;&#x9;WHERE&#x9;anc_code IN ('3017', '232', '7849')   -- 3017 = parallon BPG&#xA;&#x9;&#x9;&#x9;AND s.depth = 6    -- 124 rows&#xA;),&#xA;&#xA;&#xA;tasks AS (&#xA;SELECT   pe.[planning_code] as 'task_id'&#xA;&#x9;&#x9;,s.[description] AS 'task_name'&#xA;&#x9;&#x9;,pe.[schedule_start]&#xA;&#x9;&#x9;,pe.[schedule_finish]&#xA;&#x9;&#x9;,pe.[actual_start]&#xA;&#x9;&#x9;,pe.[actual_finish]&#xA;&#x9;&#x9;,pe.[ppl_code]&#xA;&#x9;&#x9;,pe.[short_name] as 'work_id'&#xA;&#x9;&#x9;,s.[depth]&#xA;&#x9;&#x9;,pe.[milestone]&#xA;&#x9;&#x9;,pe.[deliverables_ind]&#xA;&#x9;&#x9;,pe.[early_start]&#xA;        ,pe.[early_finish]&#xA;        ,pe.[late_start]&#xA;        ,pe.[late_finish]&#xA;        ,pe.[free_float]&#xA;        ,pe.[total_float]&#xA;        ,pe.[reschedule_needed]&#xA;&#x9;&#x9;,s1.structure_code as 'parent_task_1_id'&#xA;&#x9;&#x9;,s1.[description] as 'parent_task_1_name'&#xA;&#x9;&#x9;,s1.depth as 'parent_task_1_depth'&#xA;&#xA;&#x9;&#x9;,s2.structure_code as 'parent_task_2_id'&#xA;&#x9;&#x9;,s2.[description] as 'parent_task_2_name'&#xA;&#x9;&#x9;,s2.depth as 'parent_task_2_depth'&#xA;&#xA;&#x9;&#x9;,s3.structure_code as 'parent_task_3_id'&#xA;&#x9;&#x9;,s3.[description] as 'parent_task_3_name'&#xA;&#x9;&#x9;,s3.depth as 'parent_task_3_depth'&#xA;&#xA;&#x9;&#x9;,s4.structure_code as 'parent_task_4_id'&#xA;&#x9;&#x9;,s4.[description] as 'parent_task_4_name'&#xA;&#x9;&#x9;,s4.depth as 'parent_task_4_depth'&#xA;&#xA;&#x9;&#x9;,s5.structure_code as 'parent_task_5_id'&#xA;&#x9;&#x9;,s5.[description] as 'parent_task_5_name'&#xA;&#x9;&#x9;,s5.depth as 'parent_task_5_depth'&#xA;&#xA;&#x9;&#x9;, (select last_restore_date from restore_date) as 'last_restore_date'&#xA;&#xA;FROM [hcaprod_copy].[ip].[planning_entity] pe&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s &#xA;&#x9;&#x9;&#x9;ON pe.[planning_code] = s.[structure_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s1 ON s.father_code = s1.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s2 ON s1.father_code = s2.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s3 ON s2.father_code = s3.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s4 ON s3.father_code = s4.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s5 ON s4.father_code = s5.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s6 ON s5.father_code = s6.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s7 ON s6.father_code = s7.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s8 ON s7.father_code = s8.structure_code&#xA;WHERE ppl_code IN (select ppl_code from ParallonProjects)&#xA;),&#xA;&#xA;&#xA;planning_baseline as (&#xA;SELECT spe.[baseline_code]&#xA;&#x9;  ,b.active as 'active_baseline'&#xA;      ,spe.[planning_code]&#xA;&#x9;  ,pe.ppl_code&#xA;      ,spe.[percent_complete]&#xA;      ,spe.[milestone]&#xA;      ,[baseline_du]&#xA;      ,[baseline_finish]&#xA;      ,[baseline_start]&#xA;      ,[baseline_effort]&#xA;FROM   [hcaprod_copy].[ip].[st_planning_entity] spe&#xA;&#x9;   LEFT JOIN hcaprod_copy.ip.baseline b ON spe.baseline_code = b.baseline_code&#xA;&#x9;   INNER JOIN hcaprod_copy.ip.planning_entity pe ON spe.planning_code = pe.planning_code&#xA;WHERE  b.active = 'Y' &#xA;&#x9;   AND pe.ppl_code IN (select ppl_code from ParallonProjects)&#xA;),&#xA;&#xA;&#xA;task_summary AS (&#xA;SELECT    &#xA;&#x9;HASHBYTES('SHA1', CAST(t.ppl_code AS char(40))) AS puid&#xA;&#x9;&#xA;&#x9;&#x9;,t.[ppl_code] &#xA;&#x9;&#x9;, HASHBYTES('SHA1', CAST(task_id AS char(40))) AS tuid&#xA;&#x9;    --, t.[work_id]&#xA;&#x9;    , t.[task_id]  -- unique&#xA;&#x9;&#x9;, t.[task_name] &#xA;&#x9;&#x9;--, t.[depth]&#xA;&#x9;&#x9;, pb.baseline_start &#xA;&#x9;&#x9;, pb.baseline_finish &#xA;&#x9;    , t.[schedule_start] &#xA;&#x9;    , t.[schedule_finish]&#xA;&#x9;    , t.[actual_start]&#xA;&#x9;    , t.[actual_finish]&#xA;&#x9;&#x9;, t.[parent_task_1_id]  -- need this to be the first parent&#xA;&#x9;&#x9;, t.[parent_task_1_name]&#xA;&#x9;&#x9;, t.[parent_task_1_depth]&#xA;&#x9;&#x9;--, t.[parent_task_2_id]&#xA;&#x9;&#x9;--, t.[parent_task_2_name]&#xA;&#x9;&#x9;--, t.[parent_task_2_depth]&#xA;&#x9;&#x9;--, t.[parent_task_3_id]&#xA;&#x9;&#x9;--, t.[parent_task_3_name]&#xA;&#x9;&#x9;--, t.[parent_task_3_depth]&#xA;&#x9;&#x9;--, t.[parent_task_4_id]&#xA;&#x9;&#x9;--, t.[parent_task_4_name]&#xA;&#x9;&#x9;--, t.[parent_task_4_depth]&#xA;&#x9;&#x9;--, t.[parent_task_5_id]&#xA;&#x9;&#x9;--, t.[parent_task_5_name]&#xA;&#x9;&#x9;--, t.[parent_task_5_depth]&#xA;&#xA;--&#x9;&#x9;, t.[milestone_type]&#xA;&#x9;&#x9;, COUNT(1) AS 'Count'&#xA;--&#x9;&#x9;, MAX(case when t.[depth] &lt; 11 then 1 else 0 end) as 'SummaryTask'&#xA;&#x9;    , MAX(case when t.[deliverables_ind] = 'Y' then 1 else 0 end) as 'deliverables_ind'&#xA;&#x9;    , MAX(case when t.[milestone] = 'Y' then 1 else 0 end) as 'milestone_ind'&#xA;&#x9;    , MAX(case when t.[actual_finish] is not null then 1 else 0 end) as 'TaskIsCompleted'&#xA;&#x9;    , MAX(case when pb.baseline_finish is not null AND pb.baseline_finish &lt; last_restore_date then 1 else 0 end) as 'TaskIsScheduled'&#xA;&#x9;    , MAX(case when pb.baseline_finish is null and pb.baseline_finish &lt; last_restore_date then 1 else 0 end) as 'TaskIsOverdue'&#xA;&#x9;    , MAX(case when t.[early_finish] = t.[late_finish] then 1 else 0 end) as 'Critical Path'&#xA;        , MAX(case when t.[reschedule_needed] = 'Y' then 1 else 0 end) as 'reschedule_needed'&#xA;FROM     tasks t&#xA;&#x9;&#x9; LEFT JOIN planning_baseline pb ON t.task_id = pb.planning_code &#xA;WHERE&#x9; 1=1&#xA;&#x9;&#x9; --AND actual_finish IS NOT NULL&#xA;&#x9;&#x9; --AND schedule_finish &lt; getDate() OR actual_finish &lt; GETDATE()&#xA;GROUP BY  &#xA;&#x9;&#x9;--t.puid&#xA;&#x9;&#x9;t.[ppl_code]&#xA;&#x9;&#x9;, t.[work_id]&#xA;&#x9;    , t.[task_id] &#xA;&#x9;&#x9;, t.[task_name]&#xA;&#x9;    , t.[schedule_start]&#xA;&#x9;    , t.[schedule_finish]&#xA;&#x9;    , t.[actual_start]&#xA;&#x9;    , t.[actual_finish]&#xA;&#x9;&#x9;, pb.baseline_start&#xA;&#x9;&#x9;, pb.baseline_finish&#xA;&#x9;&#x9;, t.[depth]&#xA;&#x9;&#x9;, t.[parent_task_1_id]&#xA;&#x9;&#x9;, t.[parent_task_1_name]&#xA;&#x9;&#x9;, t.[parent_task_1_depth]&#xA;&#x9;&#x9;--, t.[parent_task_2_id]&#xA;&#x9;&#x9;--, t.[parent_task_2_name]&#xA;&#x9;&#x9;--, t.[parent_task_2_depth]&#xA;&#x9;&#x9;--, t.[parent_task_3_id]&#xA;&#x9;&#x9;--, t.[parent_task_3_name]&#xA;&#x9;&#x9;--, t.[parent_task_3_depth]&#xA;&#x9;&#x9;--, t.[parent_task_4_id]&#xA;&#x9;&#x9;--, t.[parent_task_4_name]&#xA;&#x9;&#x9;--, t.[parent_task_4_depth]&#xA;&#x9;&#x9;--, t.[parent_task_5_id]&#xA;&#x9;&#x9;--, t.[parent_task_5_name]&#xA;&#x9;&#x9;--, t.[parent_task_5_depth]&#xA;--&#x9;&#x9;, t.[milestone_type]&#xA;),&#xA;&#xA;project_tree as (&#xA;SELECT [dsc_code]&#xA;&#x9;  ,s.depth&#xA;&#x9;  ,s.father_code as 'parent_task'&#xA;      ,[anc_code]&#xA;      ,[anc_depth]&#xA;FROM  [hcaprod_copy].[ip].[project_tree] pt&#xA;INNER JOIN hcaprod_copy.ip.structure s ON pt.dsc_code = s.structure_code&#xA;WHERE  anc_depth = 6&#xA;--&#x9;   AND anc_code IN (select ppl_code from ParallonProjects)&#xA;),&#xA;&#xA;project_tree_2 as (&#xA;SELECT&#x9;*&#xA;FROM&#x9;project_tree p&#xA;WHERE&#x9;p.dsc_code NOT IN (select parent_task from project_tree)&#xA;) &#xA;&#xA;select&#x9;ts.*&#xA;FROM&#x9;task_summary ts&#xA;INNER JOIN project_tree_2 pt2 ON ts.task_id = pt2.dsc_code AND ts.ppl_code = pt2.anc_code&#xA;WHERE&#x9;(&#xA;&#x9;&#x9;(parent_task_1_depth = 7 AND parent_task_1_name NOT LIKE '%Time%') &#xA;&#x9;&#x9;--OR (parent_task_2_depth = 7 AND parent_task_2_name NOT LIKE '%Time%') &#xA;&#x9;&#x9;--OR (parent_task_3_depth = 7 AND parent_task_3_name NOT LIKE '%Time%')&#xA;&#x9;&#x9;--OR (parent_task_4_depth = 7 AND parent_task_4_name NOT LIKE '%Time%')&#xA;&#x9;&#x9;--OR (parent_task_5_depth = 7 AND parent_task_5_name NOT LIKE '%Time%')&#xA;&#x9;&#x9;)&#xA;--select * from task_summary&#xA;&#xA;&#xA;&#xA;&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Create fact_bpg_project_summary"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="SQL Create BPG ProjectSummary View"
      DTS:DTSID="{DED7EB5E-94C2-4691-9671-23CD81ADDF40}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create fact_bpg_project_summary"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="&#xA;&#xA;create VIEW [dbo].[fact_bpg_project_summary]&#xA;AS &#xA;&#xA;&#xA;&#xA;WITH &#xA;restore_date AS &#xA;(&#xA;SELECT getDate() AS last_restore_date&#xA;&#xA;),&#xA;&#xA;&#xA;issues_risks AS (&#xA;SELECT&#x9;ppl_code&#xA;&#x9;  , project&#xA;&#x9;  , cri_code&#xA;&#x9;  , name&#xA;&#x9;  , cri_type&#xA;&#x9;  , category&#xA;&#x9;  , [priority]&#xA;&#x9;  , [status]&#xA;&#x9;  , full_name&#xA;&#x9;  , resp_e_mail&#xA;&#x9;  , [description]&#xA;&#x9;  , risk_severity&#xA;&#x9;  , risk_probability&#xA;&#x9;  , issue_impact&#xA;&#x9;  , COUNT(1) as 'Count'&#xA;FROM (&#xA;&#x9;SELECT cri.[structure_code] as 'ppl_code'&#xA;&#x9;&#x9;  ,s1.[description] as 'project'&#xA;&#x9;&#x9;  ,cri.[cri_code]&#xA;&#x9;&#x9;  ,cri2.[description] as 'name'&#xA;&#x9;&#x9;  ,cri2.[cri_type]&#xA;&#x9;&#x9;  ,(select sTP.description from hcaprod_copy.ip.structure sTP where cri2.[cri1_type] = sTP.structure_code) as 'category'&#xA;&#x9;&#x9;  ,(select sTY.description from hcaprod_copy.ip.structure sTY where cri2.cri3_priority = sTY.structure_code) as 'priority'&#xA;&#x9;&#x9;  ,(select sST.description from hcaprod_copy.ip.structure sST where cri2.cri2_status = sST.structure_code) as 'status'&#xA;&#x9;&#x9;  ,iu.[full_name]&#xA;&#x9;&#x9;  ,cri2.[resp_e_mail]&#xA;&#x9;&#x9;  ,(SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'CRI_DESC1' AND lt.key2 = cri.cri_code) AS 'description'&#xA;&#x9;&#x9;  ,(select sRS.description from hcaprod_copy.ip.structure sRS WHERE r.cri8_severity = sRs.structure_code) AS 'risk_severity'&#xA;&#x9;&#x9;  ,(select description from hcaprod_copy.ip.structure where structure_code = r.risk30) as 'risk_probability'&#xA;&#x9;&#x9;  ,(select description from hcaprod_copy.ip.structure where structure_code = i.issue30) AS 'issue_impact'&#xA;&#x9;FROM [hcaprod_copy].[ip].[cri_assoc] cri&#xA;&#x9;----&#xA;&#x9;&#x9;inner join PerViewDataMart.dbo.mapping m  ON cri.[structure_code] = m.ppl_code   -------------&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].cri cri2 ON cri.[cri_code] = cri2.[cri_code]&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure s1 ON cri.[structure_code] = s1.[structure_code]&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure_tree st ON s1.[structure_code] = st.[dsc_code]&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].ip_user iu ON cri2.[resp_resource] = iu.[user_name]&#xA;&#x9;&#x9;LEFT JOIN [hcaprod_copy].[ip].risk r ON cri.[cri_code] = r.[risk_code]&#xA;&#x9;&#x9;LEFT JOIN [hcaprod_copy].[ip].issue i ON cri.[cri_code] = i.[issue_code]&#xA;&#x9;-- WHERE st.anc_code = '3017' and st.anc_depth = 3 &#xA;) sub&#xA;GROUP BY ppl_code&#xA;&#x9;   , project&#xA;&#x9;   , cri_code&#xA;&#x9;   , name&#xA;&#x9;   , cri_type&#xA;&#x9;   , category&#xA;&#x9;   , [priority]&#xA;&#x9;   , [status]&#xA;&#x9;   , full_name&#xA;&#x9;   , resp_e_mail&#xA;&#x9;   , [description]&#xA;&#x9;   , risk_severity&#xA;&#x9;   , risk_probability&#xA;&#x9;   , issue_impact&#xA;),&#xA;&#xA;issues AS (&#xA;SELECT  i.ppl_code&#xA;&#x9;  ,&#x9;i.project&#xA;&#x9;  , SUM(i.[Count]) AS 'total_issues'&#xA;FROM&#x9;issues_risks i&#xA;WHERE&#x9;cri_type = 'I' &#xA;&#x9;&#x9;AND [priority] = 'High'&#xA;&#x9;&#x9;AND [issue_impact] = 'High'&#xA;&#x9;&#x9;AND [status] = 'Open' &#xA;GROUP BY ppl_code, project&#xA;),&#xA;&#xA;risks AS (&#xA;SELECT&#x9;ppl_code&#xA;&#x9;  , project&#xA;&#x9;  , SUM([Count]) AS 'total_risks'&#xA;FROM&#x9;issues_risks&#xA;WHERE&#x9;cri_type = 'R' &#xA;&#x9;&#x9;AND [status] = 'Open'&#xA;&#x9;&#x9;AND [risk_severity] = 'High'&#xA;&#x9;&#x9;AND [risk_probability] = 'High'&#xA;&#x9;&#x9;&#xA;GROUP BY ppl_code, project, [Count]&#xA;),&#xA;&#xA;&#xA;overview AS (&#xA;&#xA;SELECT DISTINCT &#xA;&#x9;&#x9;pe.[ppl_code]&#xA;&#x9;  , pe.[short_name] AS 'work_id'&#xA;&#x9;  , CAST(pe.[percent_complete] as float) AS 'PercentComplete'&#xA;&#x9;  , (select s.description from hcaprod_copy.ip.structure s where pe.code709 = s.structure_code) AS 'PM Health'&#xA;&#x9;  , (select s.description from hcaprod_copy.ip.structure s where pe.code724 = s.structure_code) AS 'Issues_Assessment'&#xA;&#x9;  , (select s.description from hcaprod_copy.ip.structure s where pe.code726 = s.structure_code) AS 'Risks_Assessment'&#xA;&#x9;  , (select s.description from hcaprod_copy.ip.structure s where pe.code721 = s.structure_code) AS 'Scope_Assessment'&#xA;FROM&#x9;[hcaprod_copy].[ip].[planning_entity] pe&#xA;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.structure s ON pe.planning_code = s.structure_code &#xA;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.structure_tree st ON s.structure_code = st.dsc_code &#xA;--WHERE&#x9; --st.anc_code = '3017' --- all Parallon projects&#xA;&#x9;&#x9;--and st.anc_depth = 3   --- depth for all Parallon Projects &#xA;&#x9;&#x9;--and pe.ppl_code IS NOT NULL &#xA;&#xA;&#x9;&#x9;--AND pe.ppl_code NOT IN ('152274', '162829', '248644')&#xA;),&#xA;&#xA;&#xA;tasks AS (&#xA;SELECT   pe.[planning_code] as 'task_id'&#xA;&#x9;&#x9;,s.[description] as 'task_name'&#xA;&#x9;&#x9;,pe.[actual_start]&#xA;&#x9;&#x9;,pe.[actual_finish]&#xA;&#x9;&#x9;,pe.[ppl_code]&#xA;&#x9;&#x9;,s.[depth]&#xA;&#x9;&#x9;,pe.[milestone]&#xA;&#x9;&#x9;,pe.[deliverables_ind]&#xA;&#x9;&#x9;,pe.[early_start]&#xA;        ,pe.[early_finish]&#xA;        ,pe.[late_start]&#xA;        ,pe.[late_finish]&#xA;        ,pe.[free_float]&#xA;        ,pe.[total_float]&#xA;&#xA;&#x9;&#x9;,s1.structure_code as 'parent_task_1_id'&#xA;&#x9;&#x9;,s1.[description] as 'parent_task_1_name'&#xA;&#x9;&#x9;,s1.depth as 'parent_task_1_depth'&#xA;&#xA;&#x9;&#x9;,s2.structure_code as 'parent_task_2_id'&#xA;&#x9;&#x9;,s2.[description] as 'parent_task_2_name'&#xA;&#x9;&#x9;,s2.depth as 'parent_task_2_depth'&#xA;&#xA;&#x9;&#x9;,s3.structure_code as 'parent_task_3_id'&#xA;&#x9;&#x9;,s3.[description] as 'parent_task_3_name'&#xA;&#x9;&#x9;,s3.depth as 'parent_task_3_depth'&#xA;&#xA;&#x9;&#x9;,s4.structure_code as 'parent_task_4_id'&#xA;&#x9;&#x9;,s4.[description] as 'parent_task_4_name'&#xA;&#x9;&#x9;,s4.depth as 'parent_task_4_depth'&#xA;&#xA;&#x9;&#x9;--,s5.structure_code as 'parent_task_5_id'&#xA;&#x9;&#x9;--,s5.[description] as 'parent_task_5_name'&#xA;&#x9;&#x9;--,s5.depth as 'parent_task_5_depth'&#xA;&#x9;&#x9;,(select last_restore_date from restore_date) as 'last_restore_date'&#xA;FROM&#x9;[hcaprod_copy].[ip].[planning_entity] pe&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s &#xA;&#x9;&#x9;&#x9;ON pe.[planning_code] = s.[structure_code]&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s1 ON s.father_code = s1.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s2 ON s1.father_code = s2.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s3 ON s2.father_code = s3.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s4 ON s3.father_code = s4.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s5 ON s4.father_code = s5.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s6 ON s5.father_code = s6.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s7 ON s6.father_code = s7.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s8 ON s7.father_code = s8.structure_code&#xA;&#x9;&#x9;--- Create join for Parallon Projects ---&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure ss&#xA;&#x9;&#x9;&#x9;ON pe.[ppl_code] = ss.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure_tree st&#xA;&#x9;&#x9;&#x9;ON ss.structure_code = st.dsc_code&#xA;--WHERE&#x9;ppl_code IN (select ppl_code from overview) &#xA;),&#xA;&#xA;&#xA;planning_baseline as (&#xA;SELECT spe.[baseline_code]&#xA;&#x9;  ,b.active as 'active_baseline'&#xA;      ,spe.[planning_code]&#xA;&#x9;  ,pe.ppl_code&#xA;      ,spe.[percent_complete]&#xA;      ,spe.[milestone]&#xA;      ,[baseline_du]&#xA;      ,[baseline_finish]&#xA;      ,[baseline_start]&#xA;      ,[baseline_effort]&#xA;FROM   [hcaprod_copy].[ip].[st_planning_entity] spe&#xA;&#x9;   LEFT JOIN hcaprod_copy.ip.baseline b ON spe.baseline_code = b.baseline_code&#xA;&#x9;   INNER JOIN hcaprod_copy.ip.planning_entity pe ON spe.planning_code = pe.planning_code&#xA;WHERE  b.active = 'Y' &#xA;&#x9;   --AND pe.ppl_code IN (select ppl_code from overview)&#xA;),&#xA;&#xA;&#xA;task_summary AS (&#xA;SELECT    t.[ppl_code]&#xA;&#x9;    , t.[task_id] &#xA;&#x9;&#x9;, t.[task_name]&#xA;&#x9;&#x9;, t.[depth]&#xA;&#x9;    , t.[actual_start]&#xA;&#x9;    , t.[actual_finish]&#xA;&#x9;&#x9;, t.[parent_task_1_id]&#xA;&#x9;&#x9;, t.[parent_task_1_name]&#xA;&#x9;&#x9;, t.[parent_task_1_depth]&#xA;&#x9;&#x9;, t.[parent_task_2_id]&#xA;&#x9;&#x9;, t.[parent_task_2_name]&#xA;&#x9;&#x9;, t.[parent_task_2_depth]&#xA;&#x9;&#x9;, t.[parent_task_3_id]&#xA;&#x9;&#x9;, t.[parent_task_3_name]&#xA;&#x9;&#x9;, t.[parent_task_3_depth]&#xA;&#x9;&#x9;, t.[parent_task_4_id]&#xA;&#x9;&#x9;, t.[parent_task_4_name]&#xA;&#x9;&#x9;, t.[parent_task_4_depth]&#xA;&#x9;&#x9;--, t.[parent_task_5_id]&#xA;&#x9;&#x9;--, t.[parent_task_5_name]&#xA;&#x9;&#x9;--, t.[parent_task_5_depth]&#xA;&#x9;&#x9;, COUNT(1) AS 'Count'&#xA;--&#x9;&#x9;, MAX(case when [depth] &lt; 11 then 1 else 0 end) as 'SummaryTask'&#xA;&#x9;    , MAX(case when t.[deliverables_ind] = 'Y' then 1 else 0 end) as 'deliverables_ind'&#xA;&#x9;    , MAX(case when t.[milestone] = 'Y' then 1 else 0 end) as 'milestone_ind'&#xA;&#x9;    , MAX(case when t.[actual_finish] is not null then 1 else 0 end) as 'TaskIsCompleted'&#xA;&#x9;    , MAX(case when pb.[baseline_finish] is not null AND pb.baseline_finish &lt; last_restore_date then 1 else 0 end) as 'TaskIsScheduled'&#xA;&#x9;    , MAX(case when pb.baseline_finish is not null and pb.baseline_finish &lt; last_restore_date then 1 else 0 end) as 'TaskIsOverdue'&#xA;&#x9;    , MAX(case when t.[early_finish] = t.[late_finish] then 1 else 0 end) as 'Critical Path'&#xA;FROM     tasks t&#xA;&#x9;&#x9; LEFT JOIN planning_baseline pb ON t.task_id = pb.planning_code&#xA;WHERE&#x9; 1=1&#xA;&#x9;&#x9; --AND actual_finish IS NOT NULL&#xA;&#x9;&#x9; --AND schedule_finish &lt; getDate() OR actual_finish &lt; GETDATE()&#xA;GROUP BY  t.[ppl_code]&#xA;&#x9;    , t.[task_id] &#xA;&#x9;&#x9;, t.[task_name]&#xA;&#x9;    , t.[actual_start]&#xA;&#x9;    , t.[actual_finish]&#xA;&#x9;&#x9;, t.[depth]&#xA;&#x9;&#x9;, t.[parent_task_1_id]&#xA;&#x9;&#x9;, t.[parent_task_1_name]&#xA;&#x9;&#x9;, t.[parent_task_1_depth]&#xA;&#x9;&#x9;, t.[parent_task_2_id]&#xA;&#x9;&#x9;, t.[parent_task_2_name]&#xA;&#x9;&#x9;, t.[parent_task_2_depth]&#xA;&#x9;&#x9;, t.[parent_task_3_id]&#xA;&#x9;&#x9;, t.[parent_task_3_name]&#xA;&#x9;&#x9;, t.[parent_task_3_depth]&#xA;&#x9;&#x9;, t.[parent_task_4_id]&#xA;&#x9;&#x9;, t.[parent_task_4_name]&#xA;&#x9;&#x9;, t.[parent_task_4_depth]&#xA;&#x9;&#x9;--, t.[parent_task_5_id]&#xA;&#x9;&#x9;--, t.[parent_task_5_name]&#xA;&#x9;&#x9;--, t.[parent_task_5_depth]&#xA;),&#xA;&#xA;project_tree as (&#xA;SELECT [dsc_code]&#xA;&#x9;  ,s.depth&#xA;&#x9;  ,s.father_code as 'parent_task'&#xA;      ,[anc_code]&#xA;      ,[anc_depth]&#xA;FROM  [hcaprod_copy].[ip].[project_tree] pt&#xA;INNER JOIN hcaprod_copy.ip.structure s ON pt.dsc_code = s.structure_code&#xA;WHERE  anc_depth = 6&#xA;--&#x9;   AND anc_code IN (select ppl_code from overview)&#xA;),&#xA;&#xA;project_tree_2 as (&#xA;SELECT&#x9;p.dsc_code&#xA;&#x9;  , ts.task_id&#xA;&#x9;  , p.depth&#xA;&#x9;  , p.anc_code&#xA;&#x9;  , ts.ppl_code&#xA;&#x9;  , p.anc_depth&#xA;&#x9;  , ts.TaskIsCompleted&#xA;&#x9;  , ts.TaskIsScheduled&#xA;&#x9;  , ts.milestone_ind&#xA;FROM&#x9;project_tree p&#xA;LEFT JOIN task_summary ts ON p.dsc_code = ts.task_id AND p.anc_code = ts.ppl_code&#xA;WHERE&#x9;p.dsc_code NOT IN (select parent_task from project_tree)&#xA;&#x9;&#x9; AND (&#xA;&#x9;&#x9;    (parent_task_1_depth = 7 AND parent_task_1_name LIKE '%Detail%') &#xA;&#x9;&#x9; OR (parent_task_2_depth = 7 AND parent_task_2_name LIKE '%Detail%') &#xA;&#x9;&#x9; OR (parent_task_3_depth = 7 AND parent_task_3_name LIKE '%Detail%')&#xA;&#x9;&#x9; OR (parent_task_4_depth = 7 AND parent_task_4_name LIKE '%Detail%')&#xA;&#x9;&#x9; OR (parent_task_1_depth = 8 AND parent_task_1_name LIKE '%Detail%') &#xA;&#x9;&#x9; OR (parent_task_2_depth = 8 AND parent_task_2_name LIKE '%Detail%') &#xA;&#x9;&#x9; OR (parent_task_3_depth = 8 AND parent_task_3_name LIKE '%Detail%')&#xA;&#x9;&#x9; OR (parent_task_4_depth = 8 AND parent_task_4_name LIKE '%Detail%')&#xA;--&#x9;&#x9; OR (parent_task_5_depth = 7 AND parent_task_5_name LIKE '%Detail%')&#xA;&#x9;&#x9; )&#xA;),&#xA;&#xA;&#xA;&#xA;--- setup for schedule variance ---&#xA;schedule1 AS (&#xA;select&#x9; [ppl_code]&#x9;&#x9;&#xA;&#x9;&#x9; , SUM([TaskIsCompleted]) as 'Total Completed'&#xA;&#x9;&#x9; , SUM([TaskIsScheduled]) as 'Total Scheduled'&#xA;FROM&#x9; project_tree_2 pt2&#xA;WHERE&#x9;  1=1&#xA;&#x9;&#x9;  --AND milestone_ind = 0&#xA;GROUP BY  [ppl_code]&#xA;),&#xA;&#xA;--- schedule variance calculation ---&#xA;schedule2 AS (&#xA;SELECT   [ppl_code]&#xA;&#x9;   , [Total Completed]&#xA;&#x9;   , [Total Scheduled]&#xA;&#x9;   , CASE WHEN [Total Scheduled] = 0 THEN NULL&#xA;&#x9;     ELSE (cast([Total Completed] as float) / cast([Total Scheduled] as float)) END AS 'Schedule Variance'&#xA;FROM     schedule1&#xA;--WHERE    [Total Completed] &gt; 0 or [Total Scheduled] &gt; 0&#xA;GROUP BY [ppl_code]&#xA;&#x9;   , [Total Completed]&#xA;&#x9;   , [Total Scheduled]&#xA;),&#xA;&#xA;--- setup table for milestones ---&#xA;milestones1 AS (&#xA;SELECT   [ppl_code]&#xA;        ,SUM([TaskIsCompleted]) as 'Total Completed'&#xA;        ,SUM([TaskIsScheduled]) as 'Total Scheduled'&#xA;FROM     [task_summary]&#xA;where    milestone_ind = '1' &#xA;GROUP BY ppl_code&#xA;),&#xA;&#xA;--- BPG milestones - calculation --- &#xA;milestones2 AS (&#xA;SELECT   [ppl_code]&#xA;&#x9;   , [Total Completed]&#xA;&#x9;   , [Total Scheduled]&#xA;&#x9;   , (CASE WHEN [Total Scheduled] &gt; 0 THEN (cast([Total Completed] as float) / (cast([Total Completed] as float) + cast([Total Scheduled] as float)))&#xA;&#x9;&#x9;&#x9;   WHEN [Total Scheduled] = 0 THEN ([Total Completed] / [Total Completed]) ELSE NULL END) as 'Milestone Hit Rate'&#x9;&#xA;FROM     milestones1&#xA;WHERE    [Total Completed] &gt; 0 or [Total Scheduled] &gt; 0&#xA;GROUP BY [ppl_code]&#xA;&#x9;   , [Total Completed]&#xA;&#x9;   , [Total Scheduled]&#xA;)&#xA;----- setup table for deliverables ---&#xA;--deliverables1 AS (&#xA;--SELECT   [ppl_code]&#xA;--        ,SUM([TaskIsCompleted]) as 'Total Completed'&#xA;--        ,SUM([TaskIsScheduled]) as 'Total Scheduled'&#xA;--FROM     [task_summary]&#xA;--where    [deliverables_ind] = 1&#xA;--GROUP BY ppl_code&#xA;--),&#xA;&#xA;----- BPG deliverables - calculation ---&#xA;--deliverables2 AS (&#xA;--SELECT   [ppl_code]&#xA;--&#x9;   , [Total Completed]&#xA;--&#x9;   , [Total Scheduled]&#xA;--&#x9;   , (CASE WHEN [Total Scheduled] &gt; 0 THEN (cast([Total Completed] as float) / (cast([Total Completed] as float) + cast([Total Scheduled] as float)))&#xA;--&#x9;&#x9;&#x9;   WHEN [Total Scheduled] = 0 THEN ([Total Completed] / [Total Completed]) ELSE NULL END) as 'Deliverables Hit Rate'&#x9;&#xA;--FROM     deliverables1&#xA;--WHERE    [Total Completed] &gt; 0 or [Total Scheduled] &gt; 0&#xA;--GROUP BY [ppl_code]&#xA;--&#x9;   , [Total Completed]&#xA;--&#x9;   , [Total Scheduled]&#xA;--),&#xA;&#xA;&#xA;&#xA;--select *, (select [description] from hcaprod_copy.ip.structure where dsc_code = structure_code) as 'task' from project_tree_2 &#xA;&#xA;--select * from  --where ppl_code = '192538'&#xA;&#xA;---- final product ----&#xA;SELECT  &#xA;&#x9;sys.fn_varbintohexsubstring(0, HashBytes('SHA1', CAST(ov.ppl_code AS char(40))), 1, 0) as puid&#xA;&#x9;,ov.[ppl_code]&#xA;&#x9;  , ov.[work_id]&#xA;&#x9;  , (ov.[PercentComplete] / 100) AS 'PercentComplete'&#xA;&#x9;  , COUNT(1) AS 'Count'&#xA;&#x9;  , (CASE WHEN ov.[PM Health] = 'Green' THEN 1&#xA;&#x9;&#x9;&#x9; WHEN ov.[PM Health] = 'Yellow' THEN .85&#xA;&#x9;&#x9;&#x9; WHEN ov.[PM Health] = 'Red' THEN .5 ELSE NULL END) AS 'PM Health'&#xA;&#x9;  , (CASE WHEN ov.[Issues_Assessment] = 'Green' THEN 1&#xA;&#x9;&#x9;&#x9; WHEN ov.[Issues_Assessment] = 'Yellow' THEN .85&#xA;&#x9;&#x9;&#x9; WHEN ov.[Issues_Assessment] = 'Red' THEN .5 ELSE NULL END) AS 'Issues_Assessment'&#xA;&#x9;  , (CASE WHEN ov.[Risks_Assessment] = 'Green' THEN 1&#xA;&#x9;&#x9;&#x9; WHEN ov.[Risks_Assessment] = 'Yellow' THEN .85&#xA;&#x9;&#x9;&#x9; WHEN ov.[Risks_Assessment] = 'Red' THEN .5 ELSE NULL END) AS 'Risks_Assessment'&#xA;&#x9;  , (CASE WHEN ov.[Scope_Assessment] = 'Green' THEN 1&#xA;&#x9;&#x9;&#x9; WHEN ov.[Scope_Assessment] = 'Yellow' THEN .85&#xA;&#x9;&#x9;&#x9; WHEN ov.[Scope_Assessment] = 'Red' THEN .5 ELSE NULL END) AS 'Scope_Assessment'&#xA;--&#x9;  , dv2.[Deliverables Hit Rate]&#xA;&#x9;  , m2.[Milestone Hit Rate]&#xA;&#x9;  , s2.[Schedule Variance]&#xA;&#x9;  , i.total_issues&#xA;&#x9;  , r.total_risks&#xA;FROM    overview ov &#xA;&#x9;&#x9;LEFT JOIN schedule2 s2 ON ov.ppl_code = s2.ppl_code&#xA;&#x9;&#x9;LEFT JOIN milestones2 m2 ON ov.ppl_code = m2.ppl_code&#xA;--&#x9;&#x9;LEFT JOIN deliverables2 dv2 ON ov.ppl_code = dv2.ppl_code&#xA;&#x9;&#x9;LEFT JOIN issues i ON ov.ppl_code = i.ppl_code&#xA;&#x9;&#x9;LEFT JOIN risks r ON ov.ppl_code = r.ppl_code&#xA;&#xA;WHERE&#x9;ov.ppl_code IN (select ppl_code from PerViewDataMart.dbo.Mapping)&#xA;GROUP BY ov.[ppl_code]&#xA;&#x9;   , ov.[work_id]&#xA;&#x9;   , ov.[PercentComplete]&#xA;&#x9;   , ov.[PM Health]&#xA;&#x9;   , ov.Issues_Assessment&#xA;&#x9;   , ov.Risks_Assessment&#xA;&#x9;   , ov.Scope_Assessment&#xA;--&#x9;   , dv2.[Deliverables Hit Rate]&#xA;&#x9;   , m2.[Milestone Hit Rate]&#xA;&#x9;   , s2.[Schedule Variance]&#xA;&#x9;   , i.total_issues&#xA;&#x9;   , r.total_risks&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Create fact_bpg_task_summary View"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{653CD6C2-CC35-444B-A482-ED10ED5B690E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create fact_bpg_task_summary View"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="USE [HCAPROD_Copy]&#xA;GO&#xA;&#xA;&#xA;if exists(select 1 from sys.views where name='fact_bpg_task_summary' and type='v')&#xA;drop view [fact_bpg_task_summary];&#xA;go&#xA;&#xA;create VIEW [dbo].[fact_bpg_task_summary]&#xA;&#xA;AS &#xA;&#xA;&#xA;WITH restore_date AS &#xA;&#xA;( select getDate() as  last_restore_date&#xA;--SELECT sdb.Name AS DatabaseName,&#xA;--COALESCE(CONVERT(VARCHAR(12), MAX(bus.restore_date), 101),'-') AS last_restore_date&#xA;--FROM sys.sysdatabases sdb&#xA;--LEFT OUTER JOIN msdb.dbo.restorehistory bus ON bus.destination_database_name = sdb.name&#xA;--where sdb.Name = 'HCAPROD_copy'&#xA;--GROUP BY sdb.Name &#xA;&#xA;),&#xA;&#xA;&#xA;ParallonProjects &#xA;AS (&#xA;&#x9;SELECT&#x9;st.anc_code  &#xA;&#x9;&#x9;&#x9;, st.dsc_code AS ppl_code&#xA;&#x9;&#x9;&#x9;, s.[description] AS project_name&#xA;&#x9;&#x9;&#x9;--, u.full_name AS project_manager&#xA;&#x9;FROM&#x9;[hcaprod_copy].ip.structure_tree st &#xA;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].ip.structure s &#xA;&#x9;&#x9;&#x9;&#x9;ON st.dsc_code = s.structure_code&#xA;&#x9;WHERE&#x9;anc_code IN ('3017', '232', '7849')   -- 3017 = parallon BPG&#xA;&#x9;&#x9;&#x9;AND s.depth = 6    -- 124 rows&#xA;),&#xA;&#xA;&#xA;tasks AS (&#xA;SELECT   pe.[planning_code] as 'task_id'&#xA;&#x9;&#x9;,s.[description] AS 'task_name'&#xA;&#x9;&#x9;,pe.[schedule_start]&#xA;&#x9;&#x9;,pe.[schedule_finish]&#xA;&#x9;&#x9;,pe.[actual_start]&#xA;&#x9;&#x9;,pe.[actual_finish]&#xA;&#x9;&#x9;,pe.[ppl_code]&#xA;&#x9;&#x9;,pe.[short_name] as 'work_id'&#xA;&#x9;&#x9;,s.[depth]&#xA;&#x9;&#x9;,pe.[milestone]&#xA;&#x9;&#x9;,pe.[deliverables_ind]&#xA;&#x9;&#x9;,pe.[early_start]&#xA;        ,pe.[early_finish]&#xA;        ,pe.[late_start]&#xA;        ,pe.[late_finish]&#xA;        ,pe.[free_float]&#xA;        ,pe.[total_float]&#xA;        ,pe.[reschedule_needed]&#xA;&#x9;&#x9;,s1.structure_code as 'parent_task_1_id'&#xA;&#x9;&#x9;,s1.[description] as 'parent_task_1_name'&#xA;&#x9;&#x9;,s1.depth as 'parent_task_1_depth'&#xA;&#xA;&#x9;&#x9;,s2.structure_code as 'parent_task_2_id'&#xA;&#x9;&#x9;,s2.[description] as 'parent_task_2_name'&#xA;&#x9;&#x9;,s2.depth as 'parent_task_2_depth'&#xA;&#xA;&#x9;&#x9;,s3.structure_code as 'parent_task_3_id'&#xA;&#x9;&#x9;,s3.[description] as 'parent_task_3_name'&#xA;&#x9;&#x9;,s3.depth as 'parent_task_3_depth'&#xA;&#xA;&#x9;&#x9;,s4.structure_code as 'parent_task_4_id'&#xA;&#x9;&#x9;,s4.[description] as 'parent_task_4_name'&#xA;&#x9;&#x9;,s4.depth as 'parent_task_4_depth'&#xA;&#xA;&#x9;&#x9;,s5.structure_code as 'parent_task_5_id'&#xA;&#x9;&#x9;,s5.[description] as 'parent_task_5_name'&#xA;&#x9;&#x9;,s5.depth as 'parent_task_5_depth'&#xA;&#xA;&#x9;&#x9;, (select last_restore_date from restore_date) as 'last_restore_date'&#xA;&#xA;FROM [hcaprod_copy].[ip].[planning_entity] pe&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s &#xA;&#x9;&#x9;&#x9;ON pe.[planning_code] = s.[structure_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s1 ON s.father_code = s1.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s2 ON s1.father_code = s2.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s3 ON s2.father_code = s3.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s4 ON s3.father_code = s4.structure_code&#xA;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].[structure] s5 ON s4.father_code = s5.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s6 ON s5.father_code = s6.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s7 ON s6.father_code = s7.structure_code&#xA;&#x9;&#x9;--INNER JOIN [hcaprod_copy].[ip].[structure] s8 ON s7.father_code = s8.structure_code&#xA;WHERE ppl_code IN (select ppl_code from ParallonProjects)&#xA;),&#xA;&#xA;&#xA;planning_baseline as (&#xA;SELECT spe.[baseline_code]&#xA;&#x9;  ,b.active as 'active_baseline'&#xA;      ,spe.[planning_code]&#xA;&#x9;  ,pe.ppl_code&#xA;      ,spe.[percent_complete]&#xA;      ,spe.[milestone]&#xA;      ,[baseline_du]&#xA;      ,[baseline_finish]&#xA;      ,[baseline_start]&#xA;      ,[baseline_effort]&#xA;FROM   [hcaprod_copy].[ip].[st_planning_entity] spe&#xA;&#x9;   LEFT JOIN hcaprod_copy.ip.baseline b ON spe.baseline_code = b.baseline_code&#xA;&#x9;   INNER JOIN hcaprod_copy.ip.planning_entity pe ON spe.planning_code = pe.planning_code&#xA;WHERE  b.active = 'Y' &#xA;&#x9;   AND pe.ppl_code IN (select ppl_code from ParallonProjects)&#xA;),&#xA;&#xA;&#xA;task_summary AS (&#xA;SELECT    &#xA;cast( sys.fn_varbintohexsubstring(0, HashBytes('SHA1', CAST(t.ppl_code AS char(40))), 1, 0) as char(42) ) as puid&#xA;, cast( sys.fn_varbintohexsubstring(0, HashBytes('SHA1', CAST(t.task_id AS char(40))), 1, 0) as char(42) ) as tuid&#xA;,cast ( t.[ppl_code] as varchar(12)) as ppl_code&#xA;&#x9;    , t.[work_id]&#xA;&#x9;    ,cast( t.[task_id]  as varchar(12) ) as task_id&#xA;&#x9;&#x9;, cast ( 0 as bit)  as TaskIsSummary&#xA;&#x9;&#x9;, cast (1 as int) as taskCount&#xA;&#x9;&#x9;, t.[task_name]&#xA;&#x9;&#x9;, t.[depth]&#xA;&#x9;&#x9;, pb.baseline_start&#xA;&#x9;&#x9;, pb.baseline_finish&#xA;&#x9;    , t.[schedule_start]&#xA;&#x9;    , t.[schedule_finish]&#xA;&#x9;    , t.[actual_start]&#xA;&#x9;    , t.[actual_finish]&#xA;&#x9;&#x9;, t.[parent_task_1_id]&#xA;&#x9;&#x9;, t.[parent_task_1_name]&#xA;&#x9;&#x9;, t.[parent_task_1_depth]&#xA;&#x9;&#x9;, t.[parent_task_2_id]&#xA;&#x9;&#x9;, t.[parent_task_2_name]&#xA;&#x9;&#x9;, t.[parent_task_2_depth]&#xA;&#x9;&#x9;, t.[parent_task_3_id]&#xA;&#x9;&#x9;, t.[parent_task_3_name]&#xA;&#x9;&#x9;, t.[parent_task_3_depth]&#xA;&#x9;&#x9;, t.[parent_task_4_id]&#xA;&#x9;&#x9;, t.[parent_task_4_name]&#xA;&#x9;&#x9;, t.[parent_task_4_depth]&#xA;&#x9;&#x9;, t.[parent_task_5_id]&#xA;&#x9;&#x9;, t.[parent_task_5_name]&#xA;&#x9;&#x9;, t.[parent_task_5_depth]&#xA;&#xA;--&#x9;&#x9;, t.[milestone_type]&#xA;&#x9;&#x9;, COUNT(1) AS 'Count'&#xA;--&#x9;&#x9;, MAX(case when t.[depth] &lt; 11 then 1 else 0 end) as 'SummaryTask'&#xA;&#x9;    , cast(  MAX(case when t.[deliverables_ind] = 'Y' then 1 else 0 end) as bit)  as 'taskIsDeliverable'&#xA;&#x9;    , cast ( MAX(case when t.[milestone] = 'Y' then 1 else 0 end) as bit)  as 'taskIsMilestone'&#xA;&#x9;    , cast ( MAX(case when t.[actual_finish] is not null then 1 else 0 end) as bit) as 'TaskIsCompleted'&#xA;&#x9;    , cast ( MAX(case when pb.baseline_finish is not null AND pb.baseline_finish &lt; last_restore_date then 1 else 0 end) as bit)  as 'TaskIsScheduled'&#xA;&#x9;    , cast( MAX(case when pb.baseline_finish is null and pb.baseline_finish &lt; last_restore_date then 1 else 0 end) as bit) as 'TaskIsOverdue'&#xA;&#x9;    , cast ( MAX(case when t.[early_finish] = t.[late_finish] then 1 else 0 end) as bit) as 'taskIsCritical'&#xA;        , cast ( MAX(case when t.[reschedule_needed] = 'Y' then 1 else 0 end) as bit)  as 'reschedule_needed'&#xA;FROM     tasks t&#xA;&#x9;&#x9; LEFT JOIN planning_baseline pb ON t.task_id = pb.planning_code &#xA;WHERE&#x9; 1=1&#xA;&#x9;&#x9; --AND actual_finish IS NOT NULL&#xA;&#x9;&#x9; --AND schedule_finish &lt; getDate() OR actual_finish &lt; GETDATE()&#xA;GROUP BY  t.[ppl_code]&#xA;&#x9;&#x9;, t.[work_id]&#xA;&#x9;    , t.[task_id] &#xA;&#x9;&#x9;, t.[task_name]&#xA;&#x9;    , t.[schedule_start]&#xA;&#x9;    , t.[schedule_finish]&#xA;&#x9;    , t.[actual_start]&#xA;&#x9;    , t.[actual_finish]&#xA;&#x9;&#x9;, pb.baseline_start&#xA;&#x9;&#x9;, pb.baseline_finish&#xA;&#x9;&#x9;, t.[depth]&#xA;&#x9;&#x9;, t.[parent_task_1_id]&#xA;&#x9;&#x9;, t.[parent_task_1_name]&#xA;&#x9;&#x9;, t.[parent_task_1_depth]&#xA;&#x9;&#x9;, t.[parent_task_2_id]&#xA;&#x9;&#x9;, t.[parent_task_2_name]&#xA;&#x9;&#x9;, t.[parent_task_2_depth]&#xA;&#x9;&#x9;, t.[parent_task_3_id]&#xA;&#x9;&#x9;, t.[parent_task_3_name]&#xA;&#x9;&#x9;, t.[parent_task_3_depth]&#xA;&#x9;&#x9;, t.[parent_task_4_id]&#xA;&#x9;&#x9;, t.[parent_task_4_name]&#xA;&#x9;&#x9;, t.[parent_task_4_depth]&#xA;&#x9;&#x9;, t.[parent_task_5_id]&#xA;&#x9;&#x9;, t.[parent_task_5_name]&#xA;&#x9;&#x9;, t.[parent_task_5_depth]&#xA;--&#x9;&#x9;, t.[milestone_type]&#xA;),&#xA;&#xA;project_tree as (&#xA;SELECT [dsc_code]&#xA;&#x9;  ,s.depth&#xA;&#x9;  ,s.father_code as 'parent_task'&#xA;      ,[anc_code]&#xA;      ,[anc_depth]&#xA;FROM  [hcaprod_copy].[ip].[project_tree] pt&#xA;INNER JOIN hcaprod_copy.ip.structure s ON pt.dsc_code = s.structure_code&#xA;WHERE  anc_depth = 6&#xA;--&#x9;   AND anc_code IN (select ppl_code from ParallonProjects)&#xA;),&#xA;&#xA;project_tree_2 as (&#xA;SELECT&#x9;*&#xA;FROM&#x9;project_tree p&#xA;WHERE&#x9;p.dsc_code NOT IN (select parent_task from project_tree)&#xA;) &#xA;&#xA;select&#x9;ts.*&#xA;FROM&#x9;task_summary ts&#xA;INNER JOIN project_tree_2 pt2 ON ts.task_id = pt2.dsc_code AND ts.ppl_code = pt2.anc_code&#xA;WHERE&#x9;(&#xA;&#x9;&#x9;(parent_task_1_depth = 7 AND parent_task_1_name NOT LIKE '%Time%') &#xA;&#x9;&#x9;OR (parent_task_2_depth = 7 AND parent_task_2_name NOT LIKE '%Time%') &#xA;&#x9;&#x9;OR (parent_task_3_depth = 7 AND parent_task_3_name NOT LIKE '%Time%')&#xA;&#x9;&#x9;OR (parent_task_4_depth = 7 AND parent_task_4_name NOT LIKE '%Time%')&#xA;&#x9;&#x9;OR (parent_task_5_depth = 7 AND parent_task_5_name NOT LIKE '%Time%')&#xA;&#x9;&#x9;)&#xA;--select * from task_summary&#xA;&#xA;&#xA;&#xA;&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Create Intermediate Functions"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B95F1251-ECD9-4C3A-84E4-297AD0B4269B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create Intermediate Functions"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="GO&#xA;DROP FUNCTION [dbo].[uf_getIssues]&#xA;GO &#xA;;&#xA;GO&#xA;DROP FUNCTION [dbo].[uf_getOverDueMilestones]&#xA;GO&#xA;;&#xA;GO&#xA;DROP FUNCTION [dbo].[uf_getOverDueTasks]&#xA;GO&#xA;;&#xA;GO&#xA;DROP FUNCTION [dbo].[uf_getRisks]&#xA;GO&#xA;;&#xA;GO&#xA;DROP FUNCTION [dbo].[ufnSplitString]&#xA;GO&#xA;;&#xA;&#xA;&#xA;GO&#xA;CREATE FUNCTION [dbo].[uf_getIssues]&#xA;(&#x9;&#xA;&#x9;@ppl_code AS NVARCHAR(20)&#xA;)&#xA;RETURNS @output TABLE &#xA;(&#xA;&#x9;cri_code INT,&#xA;&#x9;full_name NVARCHAR(55),&#xA;&#x9;name&#x9; NVARCHAR(4000),&#xA;&#x9;[description] NVARCHAR(4000),&#xA;&#x9;resp_email NVARCHAR(55)&#xA;)&#xA;AS&#xA;&#xA;BEGIN&#xA;&#xA;&#x9;--DECLARE @ppl_code NVARCHAR(20) = '32725'&#xA;&#x9;--DECLARE @output TABLE(cri_code INT, full_name NVARCHAR(55), name NVARCHAR(MAX), [description] NVARCHAR(MAX), resp_email NVARCHAR(55) )&#xA;&#x9;;&#xA;&#x9;WITH issues AS&#xA;&#x9;(&#xA;&#x9;&#x9;-- Add the SELECT statement with parameter references here&#xA;&#x9;SELECT&#x9;[cri_code] AS 'cri_code'&#xA;&#x9;&#x9;  , [full_name]&#xA;&#x9;&#x9;  , [name] AS 'name'&#xA;&#x9;      , REPLACE([description], '|', ' ') AS 'description'&#xA;&#x9;&#x9;  , resp_email&#xA;&#x9;&#x9;  , issue_impact&#xA;&#x9;FROM (&#xA;&#x9;&#x9;&#x9;SELECT cri.[structure_code] as 'ppl_code'&#xA;&#x9;&#x9;&#x9;&#x9;  ,s1.[description] as 'project'&#xA;&#x9;&#x9;&#x9;&#x9;  ,cri.[cri_code]&#xA;&#x9;&#x9;&#x9;&#x9;  ,cri2.[description] as 'name'&#xA;&#x9;&#x9;&#x9;&#x9;  ,cri2.[cri_type]&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sTP.description from hcaprod_copy.ip.structure sTP where cri2.[cri1_type] = sTP.structure_code) as 'category'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sTY.description from hcaprod_copy.ip.structure sTY where cri2.cri3_priority = sTY.structure_code) as 'priority'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sST.description from hcaprod_copy.ip.structure sST where cri2.cri2_status = sST.structure_code) as 'status'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(CASE WHEN iu.full_name IS NULL THEN NULL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN CHARINDEX('(', full_name) = 0 THEN full_name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE SUBSTRING(full_name, 1, (CHARINDEX('(', full_name) - 1)) end) as 'full_name'&#xA;&#x9;&#x9;&#x9;&#x9;  ,iu.e_mail as 'resp_email'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'CRI_DESC1' AND lt.key2 = cri.cri_code) AS 'description'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sRS.description from hcaprod_copy.ip.structure sRS WHERE r.cri8_severity = sRs.structure_code) AS 'risk_severity'&#xA;&#x9;&#x9;&#x9;&#x9;  ,r.risk_probability&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select description from hcaprod_copy.ip.structure where structure_code = i.issue30) as 'issue_impact'&#xA;&#x9;&#x9;&#x9;FROM [hcaprod_copy].[ip].[cri_assoc] cri&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].cri cri2 ON cri.[cri_code] = cri2.[cri_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure s1 ON cri.[structure_code] = s1.[structure_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure_tree st ON s1.[structure_code] = st.[dsc_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].ip_user iu ON cri2.[resp_resource] = iu.[user_name]&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN [hcaprod_copy].[ip].risk r ON cri.[cri_code] = r.[risk_code]&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN [hcaprod_copy].[ip].issue i ON cri.[cri_code] = i.[issue_code]&#xA;&#x9;&#x9;&#x9;WHERE st.anc_code IN ('3017', '232', '7849') and st.anc_depth = 3&#x9;&#x9; &#xA;&#x9;) sub&#xA;&#x9;WHERE 1=1&#xA;&#x9;&#x9;  AND ppl_code = @ppl_code&#xA;&#x9;&#x9;  AND cri_type = 'I'&#xA;&#x9;&#x9;  AND [priority] = 'High'&#xA;&#x9;&#x9;  AND [issue_impact] = 'High'&#xA;&#x9;&#x9;  AND [status] = 'Open'&#xA;&#x9;)&#xA;&#x9;&#xA;&#x9;INSERT INTO @output ([cri_code], [full_name], [name], [description], [resp_email])&#xA;&#x9;SELECT [cri_code], [full_name], [name], [description], [resp_email] AS value FROM issues ORDER BY [cri_code]&#xA;&#x9;OPTION (MAXRECURSION 5000)&#xA;&#x9;&#xA;&#x9;--SELECT * FROM @output&#xA;&#xA;&#x9;RETURN&#xA;&#xA;END &#xA;go&#xA;;&#xA;go&#xA;CREATE FUNCTION [dbo].[uf_getRisks] &#xA;(&#x9;&#xA;&#x9;@ppl_code AS NVARCHAR(20)&#xA;)&#xA;RETURNS @output TABLE &#xA;(&#xA;&#x9;cri_code INT,&#xA;&#x9;full_name NVARCHAR(55),&#xA;&#x9;name&#x9; NVARCHAR(4000),&#xA;&#x9;[description] NVARCHAR(4000),&#xA;&#x9;resp_email NVARCHAR(55),&#xA;&#x9;ppl_code NVARCHAR(20)&#xA;)&#xA;AS&#xA;&#xA;BEGIN&#xA;&#xA;&#x9;--DECLARE @ppl_code NVARCHAR(20) = '181900'&#xA;&#x9;--DECLARE @output TABLE(cri_code INT, full_name NVARCHAR(55), name NVARCHAR(MAX), [description] NVARCHAR(MAX), resp_email NVARCHAR(55) )&#xA;&#x9;;&#xA;&#x9;WITH risks AS&#xA;&#x9;(&#xA;&#x9;&#x9;-- Add the SELECT statement with parameter references here&#xA;&#x9;SELECT&#x9;[cri_code] AS 'cri_code'&#xA;&#x9;&#x9;  , full_name&#xA;&#x9;&#x9;  , [name] AS 'name'&#xA;&#x9;      , REPLACE([description], '|', ' ') AS 'description'&#xA;&#x9;&#x9;  , [resp_email]&#xA;&#x9;&#x9;  ,ppl_code&#xA;&#x9;FROM (&#xA;&#x9;&#x9;&#x9;SELECT cri.[structure_code] as 'ppl_code'&#xA;&#x9;&#x9;&#x9;&#x9;  ,s1.[description] as 'project'&#xA;&#x9;&#x9;&#x9;&#x9;  ,cri.[cri_code]&#xA;&#x9;&#x9;&#x9;&#x9;  ,cri2.[description] as 'name'&#xA;&#x9;&#x9;&#x9;&#x9;  ,cri2.[cri_type]&#xA;&#x9;&#x9;&#x9;&#x9;  ,(CASE WHEN iu.full_name IS NULL THEN NULL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN CHARINDEX('(', full_name) = 0 THEN full_name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE SUBSTRING(full_name, 1, (CHARINDEX('(', full_name) - 1)) end) as 'full_name'&#xA;&#x9;&#x9;&#x9;&#x9;  ,iu.e_mail as 'resp_email'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sTP.description from hcaprod_copy.ip.structure sTP where cri2.[cri1_type] = sTP.structure_code) as 'category'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sTY.description from hcaprod_copy.ip.structure sTY where cri2.cri3_priority = sTY.structure_code) as 'priority'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sST.description from hcaprod_copy.ip.structure sST where cri2.cri2_status = sST.structure_code) as 'status'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'CRI_DESC1' AND lt.key2 = cri.cri_code) AS 'description'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select sRS.description from hcaprod_copy.ip.structure sRS WHERE r.cri8_severity = sRs.structure_code) AS 'risk_severity'&#xA;&#x9;&#x9;&#x9;&#x9;  ,(select description from hcaprod_copy.ip.structure where r.risk30 = structure_code) as 'risk_probability'&#xA;&#x9;&#x9;&#x9;FROM [hcaprod_copy].[ip].[cri_assoc] cri&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].cri cri2 ON cri.[cri_code] = cri2.[cri_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure s1 ON cri.[structure_code] = s1.[structure_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].structure_tree st ON s1.[structure_code] = st.[dsc_code]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [hcaprod_copy].[ip].ip_user iu ON cri2.[resp_resource] = iu.[user_name]&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN [hcaprod_copy].[ip].risk r ON cri.[cri_code] = r.[risk_code]&#xA;&#x9;&#x9;&#x9;WHERE st.anc_code IN ('3017', '232', '7849') and st.anc_depth = 3&#x9;&#x9; &#xA;&#x9;) sub&#xA;&#x9;WHERE 1=1&#xA;&#x9;&#x9;  AND ppl_code = @ppl_code&#xA;&#x9;&#x9;  AND cri_type = 'R'&#xA;&#x9;&#x9;  AND [status] = 'Open'&#xA;&#x9;&#x9;  AND [risk_probability] = 'High'&#xA;&#x9;&#x9;  AND [risk_severity] = 'High'&#xA;&#x9;)&#xA;&#x9;&#xA;&#x9;INSERT INTO @output ([cri_code], [full_name], [name], [description], [resp_email])&#xA;&#x9;SELECT [cri_code], [full_name], [name], [description], [resp_email] AS value FROM risks ORDER BY [cri_code]&#xA;&#x9;OPTION (MAXRECURSION 5000)&#xA;&#x9;&#xA;&#x9;--SELECT * FROM @output&#xA;&#xA;&#x9;RETURN&#xA;&#xA;END&#xA;go&#xA;;&#xA;GO&#xA;CREATE FUNCTION [dbo].[uf_getOverDueTasks] &#xA;(&#xA;&#x9;@ppl_code AS nvarchar(10)&#xA;)&#xA;RETURNS @output TABLE &#xA;(&#xA;&#x9;task_id INT,&#xA;&#x9;task_name NVARCHAR(4000),&#xA;&#x9;baseline_finish_date DATE&#xA;&#xA;)&#xA;AS&#xA;&#xA;BEGIN&#xA;&#xA;&#x9;--DECLARE @ppl_code NVARCHAR(20) = '205802'&#xA;&#x9;--DECLARE @output TABLE(task_id INT, task_name NVARCHAR(MAX), baseline_finish_date DATE)&#xA;&#x9;;&#xA;&#x9;WITH restore_date AS &#xA;&#x9;(&#xA;&#x9;SELECT sdb.Name AS DatabaseName,&#xA;&#x9;COALESCE(CONVERT(VARCHAR(12), MAX(bus.restore_date), 101),'-') AS last_restore_date&#xA;&#x9;FROM sys.sysdatabases sdb&#xA;&#x9;LEFT OUTER JOIN msdb.dbo.restorehistory bus ON bus.destination_database_name = sdb.name&#xA;&#x9;where sdb.Name = 'HCAPROD'&#xA;&#x9;GROUP BY sdb.Name &#xA;&#x9;),&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;Tasks AS &#xA;&#x9;(&#xA;&#x9;&#x9;SELECT&#x9;    ts.ppl_code&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;  , ts.task_id AS 'task_id'&#xA;&#x9;&#x9;&#x9;&#x9;  , REPLACE(ts.task_name, '|',' ') AS 'task_name'&#xA;&#x9;&#x9;&#x9;&#x9;  , ts.baseline_finish AS 'baseline_finish_date'&#xA;&#x9;&#x9;FROM&#x9;&#x9;hcaprod_copy.dbo.fact_bpg_task_summary ts --WITH(NOLOCK)&#xA;&#x9;&#x9;WHERE&#x9;    ts.ppl_code = @ppl_code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.baseline_finish is not null &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.baseline_finish &lt; (SELECT last_restore_date from restore_date)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.TaskIsScheduled = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.actual_finish IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.milestone_ind = 0&#xA;&#x9;)&#xA;&#xA;&#x9;INSERT INTO @output (task_id, task_name, baseline_finish_date)&#xA;&#x9;SELECT task_id, task_name, baseline_finish_date AS Value FROM Tasks ORDER BY task_id&#xA;&#x9;OPTION (MAXRECURSION 5000)&#xA;&#xA;&#x9;--SELECT * FROM @output&#xA;&#xA;&#x9;RETURN&#xA;&#xA;END&#xA;GO&#xA;;&#xA;GO&#xA;CREATE FUNCTION [dbo].[uf_getOverDueMilestones] &#xA;(&#xA;&#x9;@ppl_code AS NVARCHAR(20)&#xA;)&#xA;RETURNS @output TABLE &#xA;(&#xA;&#x9;task_id INT,&#xA;&#x9;milestone_name NVARCHAR(4000),&#xA;&#x9;scheduled_finish_date DATE&#xA;)&#xA;AS&#xA;&#xA;BEGIN&#xA;&#xA;&#x9;--DECLARE @ppl_code NVARCHAR(20) = '205802'&#xA;&#x9;--DECLARE @output TABLE(task_id INT, milestone_name NVARCHAR(MAX), scheduled_finish_date DATE)&#xA;&#x9;;&#xA;&#x9;WITH Milestones AS &#xA;&#x9;(&#xA;&#x9;&#x9;SELECT&#x9;&#x9;ts.task_id AS 'task_id'&#xA;&#x9;&#x9;&#x9;&#x9;  , REPLACE(ts.task_name, '|',' ') AS 'milestone_name'&#xA;&#x9;&#x9;&#x9;&#x9;  , ts.schedule_finish AS 'scheduled_finish_date'&#xA;&#x9;&#x9;FROM&#x9;&#x9;hcaprod_copy.dbo.fact_bpg_task_summary ts --WITH(NOLOCK)&#xA;&#x9;&#x9;WHERE&#x9;&#x9;1=1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.ppl_code = @ppl_code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND (CAST(ts.schedule_finish AS DATE) &lt; CAST(getDate() AS DATE))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.actual_finish IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--AND ts.SummaryTask = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND ts.milestone_ind = 1&#xA;&#x9;)&#xA;&#xA;&#x9;INSERT INTO @output (task_id, milestone_name, scheduled_finish_date)&#xA;&#x9;SELECT task_id, milestone_name, scheduled_finish_date AS Value FROM Milestones ORDER BY task_id&#xA;&#x9;OPTION (MAXRECURSION 5000)&#xA;&#xA;&#x9;--SELECT * FROM @output&#xA;&#xA;&#x9;RETURN&#xA;&#xA;END&#xA;&#xA;GO&#xA;&#xA;&#xA;;&#xA;GO&#xA;CREATE FUNCTION [dbo].[ufnSplitString]&#xA;&#x9;(&#xA;&#x9;&#x9;@string NVARCHAR(MAX),   &#xA;&#x9;&#x9;@delimiter CHAR(1)   &#xA;&#x9;)&#xA;    RETURNS @output TABLE(Value NVARCHAR(MAX))   &#xA;    AS&#xA;    BEGIN   &#xA;&#xA;        --DECLARE @string NVARCHAR(MAX) = 'D8A4E129-372C-4723-BE3F-8E926453E152,1AF29357-B9B1-42CC-AA07-B3C00A41AD2F,8E854E85-07DA-4A5D-A636-E53CE9AD39F7,7082DEEA-999E-4633-AB41-10D1691DE69E'&#xA;        --DECLARE @delimiter CHAR(1) = ','&#xA;&#xA;        DECLARE @start INT, @end INT   &#xA;        SELECT @start = 1, @end = CHARINDEX(@delimiter, @string)   &#xA;        WHILE @start &lt; LEN(@string) + 1 &#xA;        BEGIN   &#xA;            IF @end = 0    &#xA;                SET @end = LEN(@string) + 1  &#xA;             &#xA;            INSERT INTO @output (Value)    &#xA;            VALUES(SUBSTRING(@string, @start, @end - @start))   &#xA;            SET @start = @end + 1   &#xA;            SET @end = CHARINDEX(@delimiter, @string, @start)  &#xA;              &#xA;        END   &#xA;        RETURN   &#xA;    END&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Create overdue_tasks view"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C00DE805-62A6-4BF2-9699-63B180C280AB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create overdue_tasks view"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="drop VIEW [dbo].[overdue_tasks]&#xA;go&#xA;&#xA;&#xA;create VIEW [dbo].[overdue_tasks] AS &#x9;&#xA;&#x9;&#xA;WITH restore_date AS &#xA;( select getDate() as  last_restore_date&#xA;--SELECT sdb.Name AS DatabaseName,&#xA;--COALESCE(CONVERT(VARCHAR(12), MAX(bus.restore_date), 101),'-') AS last_restore_date&#xA;--FROM sys.sysdatabases sdb&#xA;--LEFT OUTER JOIN msdb.dbo.restorehistory bus ON bus.destination_database_name = sdb.name&#xA;--where sdb.Name = 'HCAPROD_copy'&#xA;--GROUP BY sdb.Name &#xA;)&#xA;&#x9;&#xA;&#xA;SELECT&#x9;    ts.ppl_code&#x9;&#xA;&#x9;&#x9;&#x9;, ts.task_id AS 'task_id'&#xA;&#x9;&#x9;&#x9;, REPLACE(ts.task_name, '|',' ') AS 'task_name'&#xA;&#x9;&#x9;&#x9;, ts.baseline_finish AS 'baseline_finish_date'&#xA;FROM&#x9;&#x9;hcaprod_copy.dbo.fact_bpg_task_summary ts --WITH(NOLOCK)&#xA;&#x9;&#x9;&#x9;inner join PerViewDataMart.dbo.mapping m &#xA;&#x9;&#x9;&#x9;on ts.ppl_code = m.ppl_code&#xA;WHERE&#x9;    1=1--ts.ppl_code = @ppl_code&#xA;&#x9;&#x9;&#x9;AND ts.baseline_finish is not null &#xA;&#x9;&#x9;&#x9;AND ts.baseline_finish &lt; (SELECT last_restore_date from restore_date)&#xA;&#x9;&#x9;&#x9;AND ts.TaskIsScheduled = 1&#xA;&#x9;&#x9;&#x9;AND ts.actual_finish IS NULL&#xA;&#x9;&#x9;&#x9;--AND ts.milestone_ind = 0&#xA;&#xA;&#xA;&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Create PlanView Tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B69DD41A-0E68-4C4A-8F2B-6E65AEB86973}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create PlanView Tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="USE [HCAPROD_Copy]&#xA;GO &#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[baseline]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[baseline]&#xA;END  &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[epm_strat_work]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[epm_strat_work]&#xA;END &#xA; &#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[ip_user]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[ip_user]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[long_text]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[long_text]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[planning_entity]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[planning_entity]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[structure]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[structure]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[structure]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[structure]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[structure_tree]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[structure_tree]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[wf_team]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[wf_team]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[workflow]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[workflow]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[st_planning_entity]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[st_planning_entity]&#xA;END &#xA;&#xA;IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID = OBJECT_ID(N'[ip].[project_tree]') AND type IN (N'U')) &#xA;BEGIN &#xA;   DROP TABLE  [ip].[project_tree]&#xA;END &#xA;&#xA;&#xA;&#xA;&#xA;CREATE TABLE [ip].[baseline](&#xA;&#x9;[baseline_code] [varchar](10)  NULL,&#xA;&#x9;[user_name] [varchar](10) NULL,&#xA;&#x9;[type] [varchar](2) NULL,&#xA;&#x9;[usage] [varchar](2) NULL,&#xA;&#x9;[plan_code] [varchar](10) NULL,&#xA;&#x9;[creation_date] [datetime] NULL,&#xA;&#x9;[timenow] [datetime] NULL,&#xA;&#x9;[last_progress] [datetime] NULL,&#xA;&#x9;[structure_code] [varchar](10) NULL,&#xA;&#x9;[description] [varchar](50) NULL,&#xA;&#x9;[active] [varchar](1) NULL,&#xA;&#x9;[updated_on] [datetime] NULL,&#xA;&#x9;[updated_by] [varchar](20) NULL,&#xA;&#x9;[bl_master_id] [varchar](10) NULL,&#xA;&#x9;[locked_ind] [varchar](1) NULL,&#xA;&#x9;[locked_on] [datetime] NULL,&#xA;&#x9;[locked_by] [varchar](10) NULL,&#xA;&#x9;[update_status] [varchar](10) NULL&#xA; &#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[epm_strat_work](&#xA;&#x9;[strategy_code] [varchar](10) null,&#xA;&#x9;[planning_code] [varchar](10) null,&#xA;&#x9;[associated_by] [varchar](10) null,&#xA;&#x9;[associated_on] [datetime] null,&#xA;&#x9;[percentage_share] [decimal](5, 2) NULL,&#xA;&#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[ip_user](&#xA;&#x9;[user_name] [varchar](10) null,&#xA;&#x9;[full_name] [varchar](30) NULL,&#xA;&#x9;[plan_code] [varchar](10) NULL,&#xA;&#x9;[view_code] [varchar](10) NULL,&#xA;&#x9;[language] [varchar](8) NULL,&#xA;&#x9;[custom] [varchar](8) NULL,&#xA;&#x9;[user_class] [varchar](8) NULL,&#xA;&#x9;[app_grant] [varchar](8) NULL,&#xA;&#x9;[connected] [varchar](1) NULL,&#xA;&#x9;[baseline_code] [varchar](10) NULL,&#xA;&#x9;[tmp_schedule] [varchar](10) NULL,&#xA;&#x9;[user_group] [varchar](10) NULL,&#xA;&#x9;[batch_granted] [varchar](1) NULL,&#xA;&#x9;[create_cal] [varchar](1) NULL,&#xA;&#x9;[grt_allo_re] [varchar](1) NULL,&#xA;&#x9;[grt_allo_pe] [varchar](1) NULL,&#xA;&#x9;[mod_structure] [varchar](1) NULL,&#xA;&#x9;[upd_ts] [varchar](1) NULL,&#xA;&#x9;[user_password] [varchar](80) null,&#xA;&#x9;[password_date] [datetime] NULL,&#xA;&#x9;[disconnect_flag] [varchar](3) NULL,&#xA;&#x9;[login_flag] [varchar](3) NULL,&#xA;&#x9;[login_time] [datetime] NULL,&#xA;&#x9;[appr_expense] [varchar](1) NULL,&#xA;&#x9;[phone1] [varchar](25) NULL,&#xA;&#x9;[phone2] [varchar](25) NULL,&#xA;&#x9;[pager] [varchar](25) NULL,&#xA;&#x9;[e_mail] [varchar](85) NULL,&#xA;&#x9;[role_code] [varchar](10) NULL,&#xA;&#x9;[last_modified] [datetime] NULL,&#xA;&#x9;[os_user_name] [varchar](512) NULL,&#xA;&#x9;[cri_escalate_to] [varchar](1) NULL,&#xA;&#x9;[pv_outlook] [varchar](1) NULL,&#xA;&#x9;[ticket] [int] NULL,&#xA;&#x9;[color] [varchar](20) NULL,&#xA;&#x9;[added_date] [datetime] NULL,&#xA;&#x9;[added_by] [varchar](10) NULL,&#xA;&#x9;[expiration_date] [datetime] NULL,&#xA;&#x9;[user_comment] [varchar](80) NULL,&#xA;&#x9;[must_login_ind] [varchar](1) NULL,&#xA;&#x9;[password_expires] [smallint] NULL,&#xA;&#x9;[currency_code] [varchar](10) NULL,&#xA;&#x9;[customer_code] [varchar](10) NULL,&#xA;&#x9;[modified_by] [varchar](10) NULL,&#xA;&#x9;[bad_login_count] [int] NULL,&#xA;&#x9;[self_reg_ind] [varchar](1) NULL,&#xA;&#x9;[sr_ip_address] [varchar](40) NULL,&#xA;&#x9;[active_ind] [varchar](1) null,&#xA;&#x9;[ia_active_dir_user] [varchar](512) NULL,&#xA;&#x9;[bi_user] [varchar](512) NULL,&#xA;&#x9;[reset_pwd_ind] [varchar](1) NULL,&#xA;&#x9;[deleted_ind] [varchar](1) NULL&#xA; &#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[long_text](&#xA;&#x9;[key1] [varchar](20) NULL,&#xA;&#x9;[key2] [varchar](20) NULL,&#xA;&#x9;[key3] [varchar](10) NULL,&#xA;&#x9;[key4] [varchar](10) NULL,&#xA;&#x9;[key5] [varchar](10) NULL,&#xA;&#x9;[key6] [int] NULL,&#xA;&#x9;[key7] [int] NULL,&#xA;&#x9;[key8] [int] NULL,&#xA;&#x9;[line_number] [int] NULL,&#xA;&#x9;[line_text] [varchar](4000) NULL,&#xA;&#x9;[last_updated_by] [varchar](10) NULL,&#xA;&#x9;[last_updated_on] [datetime] NULL&#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[planning_entity](&#xA;&#x9;[planning_code] [varchar](10) null,&#xA;&#x9;[short_name] [varchar](12) NULL,&#xA;&#x9;[status] [varchar](1) NULL,&#xA;&#x9;[tse] [datetime] NULL,&#xA;&#x9;[tfl] [datetime] NULL,&#xA;&#x9;[schedule_start] [datetime] NULL,&#xA;&#x9;[schedule_finish] [datetime] NULL,&#xA;&#x9;[schedule_du_nb] [int] NULL,&#xA;&#x9;[actual_start] [datetime] NULL,&#xA;&#x9;[actual_finish] [datetime] NULL,&#xA;&#x9;[spend_value] [int] NULL,&#xA;&#x9;[estimate_start] [datetime] NULL,&#xA;&#x9;[estimate_finish] [datetime] NULL,&#xA;&#x9;[estimate_du_nb] [int] NULL,&#xA;&#x9;[original_ss] [datetime] NULL,&#xA;&#x9;[original_sf] [datetime] NULL,&#xA;&#x9;[original_du] [int] NULL,&#xA;&#x9;[lid] [datetime] NULL,&#xA;&#x9;[lpd] [datetime] NULL,&#xA;&#x9;[forecast_start] [datetime] NULL,&#xA;&#x9;[forecast_finish] [datetime] NULL,&#xA;&#x9;[forecast_du_nb] [int] NULL,&#xA;&#x9;[forecast_load] [int] NULL,&#xA;&#x9;[code1] [varchar](10) NULL,&#xA;&#x9;[code2] [varchar](10) NULL,&#xA;&#x9;[code3] [varchar](10) NULL,&#xA;&#x9;[code4] [varchar](10) NULL,&#xA;&#x9;[code5] [varchar](10) NULL,&#xA;&#x9;[code6] [varchar](10) NULL,&#xA;&#x9;[code7] [varchar](10) NULL,&#xA;&#x9;[code8] [varchar](10) NULL,&#xA;&#x9;[percent_complete] [smallint] NULL,&#xA;&#x9;[calendar] [varchar](10) NULL,&#xA;&#x9;[duration_type] [varchar](1) NULL,&#xA;&#x9;[priority] [varchar](3) NULL,&#xA;&#x9;[previous_start] [datetime] NULL,&#xA;&#x9;[previous_finish] [datetime] NULL,&#xA;&#x9;[previous_du_nb] [int] NULL,&#xA;&#x9;[cost_mode] [varchar](2) NULL,&#xA;&#x9;[cost_update] [datetime] NULL,&#xA;&#x9;[user_status] [varchar](2) NULL,&#xA;&#x9;[code20] [varchar](10) NULL,&#xA;&#x9;[code22] [varchar](10) NULL,&#xA;&#x9;[code24] [varchar](10) NULL,&#xA;&#x9;[code25] [varchar](10) NULL,&#xA;&#x9;[code26] [varchar](10) NULL,&#xA;&#x9;[dont_progress] [varchar](1) NULL,&#xA;&#x9;[consolidated] [varchar](1) NULL,&#xA;&#x9;[smi_code] [varchar](10) NULL,&#xA;&#x9;[smi_factor] [int] NULL,&#xA;&#x9;[early_start] [datetime] NULL,&#xA;&#x9;[early_finish] [datetime] NULL,&#xA;&#x9;[late_start] [datetime] NULL,&#xA;&#x9;[late_finish] [datetime] NULL,&#xA;&#x9;[free_float] [int] NULL,&#xA;&#x9;[total_float] [int] NULL,&#xA;&#x9;[reschedule_needed] [varchar](1) NULL,&#xA;&#x9;[cpm_rollup_block] [varchar](1) NULL,&#xA;&#x9;[milestone] [varchar](1) NULL,&#xA;&#x9;[enter_progress] [varchar](1) NULL,&#xA;&#x9;[code27] [varchar](10) NULL,&#xA;&#x9;[code28] [varchar](10) NULL,&#xA;&#x9;[code29] [varchar](10) NULL,&#xA;&#x9;[ppl_code] [varchar](10) NULL,&#xA;&#x9;[ticketable_ind] [varchar](1) NULL,&#xA;&#x9;[lc_admin_user] [varchar](10) NULL,&#xA;&#x9;[enable_lifecycle_ind] [varchar](1) NULL,&#xA;&#x9;[child_lc_enabled_ind] [varchar](1) NULL,&#xA;&#x9;[child_lc_required_ind] [varchar](1) NULL,&#xA;&#x9;[cap_appr] [varchar](10) NULL,&#xA;&#x9;[deliverables_ind] [varchar](1) NULL,&#xA;&#x9;[def_cc_code] [varchar](10) NULL,&#xA;&#x9;[op_cap_appr] [varchar](10) NULL,&#xA;&#x9;[progress_as_planned] [varchar](1) NULL,&#xA;&#x9;[code10] [varchar](10) NULL,&#xA;&#x9;[code12] [varchar](10) NULL,&#xA;&#x9;[sprint] [varchar](10) NULL,&#xA;&#x9;[code13] [varchar](10) NULL,&#xA;&#x9;[code14] [varchar](10) NULL,&#xA;&#x9;[story_id] [varchar](20) NULL,&#xA;&#x9;[points_planned] [decimal](20, 2) NULL,&#xA;&#x9;[points_earned] [decimal](20, 2) NULL,&#xA;&#x9;[code15] [varchar](10) NULL,&#xA;&#x9;[code16] [varchar](10) NULL,&#xA;&#x9;[code9] [varchar](10) NULL,&#xA;&#x9;[codeagr3] [varchar](10) NULL,&#xA;&#x9;[code49] [varchar](10) NULL,&#xA;&#x9;[code50] [varchar](10) NULL,&#xA;&#x9;[code51] [varchar](10) NULL,&#xA;&#x9;[code52] [varchar](10) NULL,&#xA;&#x9;[code53] [varchar](10) NULL,&#xA;&#x9;[code54] [varchar](10) NULL,&#xA;&#x9;[code55] [varchar](10) NULL,&#xA;&#x9;[code56] [varchar](10) NULL,&#xA;&#x9;[code180] [varchar](10) NULL,&#xA;&#x9;[code713] [varchar](10) NULL,&#xA;&#x9;[code709] [varchar](10) NULL,&#xA;&#x9;[code712] [varchar](10) NULL,&#xA;&#x9;[code48] [varchar](10) NULL,&#xA;&#x9;[code37] [varchar](10) NULL,&#xA;&#x9;[code60] [varchar](10) NULL,&#xA;&#x9;[code61] [varchar](10) NULL,&#xA;&#x9;[code62] [varchar](10) NULL,&#xA;&#x9;[code63] [varchar](10) NULL,&#xA;&#x9;[code64] [varchar](10) NULL,&#xA;&#x9;[code41] [varchar](10) NULL,&#xA;&#x9;[code42] [varchar](10) NULL,&#xA;&#x9;[code43] [varchar](10) NULL,&#xA;&#x9;[code44] [varchar](10) NULL,&#xA;&#x9;[code45] [varchar](10) NULL,&#xA;&#x9;[code46] [varchar](10) NULL,&#xA;&#x9;[code47] [varchar](10) NULL,&#xA;&#x9;[code58] [varchar](10) NULL,&#xA;&#x9;[code711] [varchar](10) NULL,&#xA;&#x9;[code708] [varchar](10) NULL,&#xA;&#x9;[code196] [varchar](10) NULL,&#xA;&#x9;[code199] [varchar](10) NULL,&#xA;&#x9;[code198] [varchar](10) NULL,&#xA;&#x9;[code197] [varchar](10) NULL,&#xA;&#x9;[last_updated_on] [datetime] NULL,&#xA;&#x9;[previous_percent_complete] [smallint] NULL,&#xA;&#x9;[code721] [varchar](10) NULL,&#xA;&#x9;[code722] [varchar](10) NULL,&#xA;&#x9;[code723] [varchar](10) NULL,&#xA;&#x9;[code724] [varchar](10) NULL,&#xA;&#x9;[code725] [varchar](10) NULL,&#xA;&#x9;[code726] [varchar](10) NULL,&#xA;&#x9;[code17] [varchar](10) NULL,&#xA;&#x9;[codewr31] [varchar](10) NULL,&#xA;&#x9;[codewr30] [varchar](10) NULL,&#xA;&#x9;[codewr32] [varchar](10) NULL,&#xA;&#x9;[codewr33] [varchar](10) NULL,&#xA;&#x9;[codewr36] [varchar](10) NULL,&#xA;&#x9;[codewr37] [varchar](10) NULL,&#xA;&#x9;[codewr38] [varchar](10) NULL,&#xA;&#x9;[codewr2] [varchar](10) NULL,&#xA;&#x9;[code38] [varchar](10) NULL,&#xA;&#x9;[code39] [varchar](10) NULL,&#xA;&#x9;[code40] [varchar](10) NULL,&#xA;&#x9;[code59] [varchar](10) NULL,&#xA;&#x9;[code65] [varchar](10) NULL,&#xA;&#x9;[code66] [varchar](10) NULL,&#xA;&#x9;[code67] [varchar](10) NULL,&#xA;&#x9;[code68] [varchar](10) NULL,&#xA;&#x9;[code69] [varchar](10) NULL,&#xA;&#x9;[code70] [varchar](10) NULL,&#xA;&#x9;[code71] [varchar](10) NULL,&#xA;&#x9;[code72] [varchar](10) NULL,&#xA;&#x9;[code73] [varchar](10) NULL,&#xA;&#x9;[code74] [varchar](10) NULL,&#xA;&#x9;[code75] [varchar](10) NULL,&#xA;&#x9;[code76] [varchar](10) NULL,&#xA;&#x9;[code77] [varchar](10) NULL,&#xA;&#x9;[code78] [varchar](10) NULL,&#xA;&#x9;[code79] [varchar](10) NULL,&#xA;&#x9;[code80] [varchar](10) NULL,&#xA;&#x9;[code81] [varchar](10) NULL,&#xA;&#x9;[code82] [varchar](10) NULL,&#xA;&#x9;[code83] [varchar](10) NULL,&#xA;&#x9;[code84] [varchar](10) NULL,&#xA;&#x9;[code85] [varchar](10) NULL,&#xA;&#x9;[code86] [varchar](10) NULL,&#xA;&#x9;[code87] [varchar](10) NULL,&#xA;&#x9;[code88] [varchar](10) NULL,&#xA;&#x9;[code89] [varchar](10) NULL,&#xA;&#x9;[code90] [varchar](10) NULL,&#xA;&#x9;[code92] [varchar](10) NULL,&#xA;&#x9;[code93] [varchar](10) NULL,&#xA;&#x9;[code94] [varchar](10) NULL,&#xA;&#x9;[code95] [varchar](10) NULL,&#xA;&#x9;[code96] [varchar](10) NULL,&#xA;&#x9;[code97] [varchar](10) NULL,&#xA;&#x9;[code98] [varchar](10) NULL,&#xA;&#x9;[code99] [varchar](10) NULL,&#xA;&#x9;[code100] [varchar](10) NULL,&#xA;&#x9;[code101] [varchar](10) NULL,&#xA;&#x9;[code102] [varchar](10) NULL,&#xA;&#x9;[code57] [varchar](10) NULL,&#xA;&#x9;[code105] [varchar](10) NULL,&#xA;&#x9;[code104] [varchar](10) NULL,&#xA;&#x9;[code106] [varchar](10) NULL,&#xA;&#x9;[code107] [varchar](10) NULL,&#xA;&#x9;[code103] [varchar](10) NULL,&#xA;&#x9;[code19] [varchar](10) NULL,&#xA;&#x9;[bl_restore_status] [varchar](5) NULL,&#xA;&#x9;[strat_milestone_code] [varchar](10) NULL,&#xA;&#x9;[code108] [varchar](10) NULL,&#xA;&#x9;[code109] [varchar](10) NULL,&#xA;&#x9;[code110] [varchar](10) NULL&#xA;&#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[structure](&#xA;&#x9;[structure_name] [varchar](10) null,&#xA;&#x9;[structure_code] [varchar](10) null,&#xA;&#x9;[place] [smallint] null,&#xA;&#x9;[father_code] [varchar](10) NULL,&#xA;&#x9;[description] [varchar](50) NULL,&#xA;&#x9;[user_flag] [varchar](10) NULL,&#xA;&#x9;[depth] [smallint] NULL,&#xA;&#x9;[detailed] [varchar](2) NULL,&#xA;&#x9;[import_code] [varchar](50) NULL,&#xA;&#x9;[last_updated_on] [datetime] NULL,&#xA;&#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[structure_tree](&#xA;&#x9;[dsc_code] [varchar](10) null,&#xA;&#x9;[anc_code] [varchar](10) null,&#xA;&#x9;[anc_depth] [int] null,&#xA; &#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[wf_team](&#xA;&#x9;[workflow_id] [varchar](10) null,&#xA;&#x9;[lifecycle_role_code] [varchar](10) null,&#xA;&#x9;[place] [int] null,&#xA;&#x9;[user_name] [varchar](10) NULL,&#xA;&#x9;[planning_code] [varchar](10) NULL,&#xA;&#x9;[send_content_notif_ind] [varchar](1) null,&#xA;&#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[workflow](&#xA;&#x9;[workflow_id] [varchar](10) null,&#xA;&#x9;[wf_template_id] [varchar](10) NULL,&#xA;&#x9;[entity_type] [varchar](10) null,&#xA;&#x9;[planning_code] [varchar](10) NULL,&#xA;&#x9;[log_number] [varchar](10) NULL,&#xA;&#x9;[request_code] [varchar](10) NULL,&#xA;&#x9;[wbs_template_code] [varchar](10) NULL,&#xA;&#x9;[model_code] [varchar](10) NULL,&#xA;&#x9;[budget_template_code] [varchar](10) NULL,&#xA;&#x9;[initial_status_code] [varchar](10) NULL,&#xA;&#x9;[start_silent_ind] [varchar](1) null,&#xA;&#x9;[invest_struc_name] [varchar](10) NULL,&#xA;&#x9;[strategy_code] [varchar](10) NULL,&#xA;&#x9;[service_code] [varchar](10) NULL,&#xA;&#x9;[asset_code] [varchar](10) NULL,&#xA;&#x9;[agrmnt_code] [varchar](10) NULL,&#xA;&#x9;[resume_primary_ind] [varchar](1) NULL,&#xA;&#x9;[resume_notif_ind] [varchar](1) NULL,&#xA;&#x9;[resume_notif_resp_tp] [varchar](10) NULL,&#xA;&#x9;[resume_notif_role] [varchar](10) NULL,&#xA;&#x9;[resume_last_status] [varchar](10) NULL,&#xA;&#x9;[fm_model_id] [bigint] NULL,&#xA;&#x9;[cri_code] [varchar](10) NULL,&#xA;&#x9;[product_code] [varchar](10) NULL,&#xA;&#x9;[transaction_id] [bigint] NULL,&#xA;&#xA;) ON [PRIMARY]&#xA;GO&#xA;&#xA;&#xA;&#xA;CREATE TABLE [ip].[st_planning_entity](&#xA;&#x9;[baseline_code] [varchar](10) NOT NULL,&#xA;&#x9;[planning_code] [varchar](10) NOT NULL,&#xA;&#x9;[status] [varchar](1) NULL,&#xA;&#x9;[tse] [datetime] NULL,&#xA;&#x9;[tfl] [datetime] NULL,&#xA;&#x9;[schedule_start] [datetime] NULL,&#xA;&#x9;[schedule_finish] [datetime] NULL,&#xA;&#x9;[schedule_du_nb] [int] NULL,&#xA;&#x9;[actual_start] [datetime] NULL,&#xA;&#x9;[actual_finish] [datetime] NULL,&#xA;&#x9;[spend_value] [int] NULL,&#xA;&#x9;[original_ss] [datetime] NULL,&#xA;&#x9;[original_du] [int] NULL,&#xA;&#x9;[original_sf] [datetime] NULL,&#xA;&#x9;[lid] [datetime] NULL,&#xA;&#x9;[lpd] [datetime] NULL,&#xA;&#x9;[calendar] [varchar](10) NULL,&#xA;&#x9;[duration_type] [varchar](1) NULL,&#xA;&#x9;[priority] [varchar](3) NULL,&#xA;&#x9;[cost_mode] [varchar](2) NULL,&#xA;&#x9;[cost_update] [datetime] NULL,&#xA;&#x9;[percent_complete] [int] NULL,&#xA;&#x9;[code20] [varchar](10) NULL,&#xA;&#x9;[code22] [varchar](10) NULL,&#xA;&#x9;[code24] [varchar](10) NULL,&#xA;&#x9;[code26] [varchar](10) NULL,&#xA;&#x9;[early_start] [datetime] NULL,&#xA;&#x9;[early_finish] [datetime] NULL,&#xA;&#x9;[late_start] [datetime] NULL,&#xA;&#x9;[late_finish] [datetime] NULL,&#xA;&#x9;[free_float] [int] NULL,&#xA;&#x9;[total_float] [int] NULL,&#xA;&#x9;[milestone] [varchar](1) NULL,&#xA;&#x9;[short_name] [varchar](12) NULL,&#xA;&#x9;[smi_code] [varchar](10) NULL,&#xA;&#x9;[smi_factor] [int] NULL,&#xA;&#x9;[baseline_du] [int] NULL,&#xA;&#x9;[baseline_finish] [datetime] NULL,&#xA;&#x9;[baseline_start] [datetime] NULL,&#xA;&#x9;[baseline_effort] [bigint] NULL,&#xA;&#x9;[baseline_cost] [int] NULL,&#xA;&#x9;[required_effort] [int] NULL,&#xA;&#x9;[updated_by] [varchar](10) NULL,&#xA;&#x9;[updated_on] [datetime] NULL,&#xA;&#x9;[baseline_effort_reserved] [bigint] NULL,&#xA;&#x9;[baseline_effort_req] [bigint] NULL,&#xA;&#x9;[planned_effort] [bigint] NULL,&#xA;&#x9;[planned_as_of] [datetime] NULL,&#xA;&#x9;[effort_this_work] [bigint] NULL,&#xA;&#x9;[planned_effort_this_work] [bigint] NULL,&#xA;&#x9;[planned_cost] [int] NULL,&#xA;&#x9;[cost_this_work] [int] NULL,&#xA;&#x9;[planned_cost_this_work] [int] NULL,&#xA;&#x9;[enter_progress] [varchar](10) NULL,&#xA;&#x9;[progress_as_planned] [varchar](10) NULL,&#xA;&#x9;[code25] [varchar](10) NULL&#xA;&#xA;) ON [PRIMARY]&#xA;&#xA;CREATE TABLE [ip].[project_tree](&#xA;&#x9;[dsc_code] [varchar](10) NOT NULL,&#xA;&#x9;[anc_code] [varchar](10) NOT NULL,&#xA;&#x9;[anc_depth] [int] NOT NULL&#xA; &#xA;) ON [PRIMARY]&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Create Risks and Issues views"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F379FC47-EF9E-43E8-91C7-9560108A3E3E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Create Risks and Issues views"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="&#xA;if exists(select 1 from sys.views where name='bpg_risks' and type='v')&#xA;drop view [bpg_risks];&#xA;go&#xA;create view [dbo].[bpg_risks] as &#xA;&#xA;select &#xA;cast ( sys.fn_varbintohexsubstring(0, HashBytes('SHA1', CAST(p.ppl_code AS char(40))), 1, 0) as char(42) )  as puid&#xA; , cast ( p.ppl_code as varchar(12)) as ppl_code&#xA; , cast ( risks.name as varchar(100))  as title&#xA;, cast (risks.cri_code as varchar(100) ) as cri_code&#xA;, cast ( risks.full_name as varchar(100) ) as assignedToResource&#xA;, cast ( risks.description as varchar(1000) ) as discussion&#xA;, cast ( risks.resp_email as varchar (50) ) as resp_email&#xA;, 1 as 'count'&#xA;&#xA;&#xA;&#xA;from dim_mapped_projects p &#xA;cross apply &#xA;(&#xA;&#x9;SELECT * FROM [dbo].[uf_getRisks] (&#xA;   p.ppl_code) &#xA;) risks  &#xA;&#xA;GO&#xA;&#xA;if exists(select 1 from sys.views where name='bpg_issues' and type='v')&#xA;drop view [bpg_issues];&#xA;go&#xA;CREATE view [dbo].[bpg_issues] as &#xA;&#xA;select &#xA;cast ( sys.fn_varbintohexsubstring(0, HashBytes('SHA1', CAST(p.ppl_code AS char(40))), 1, 0) as char(42) )  as puid&#xA; , cast ( p.ppl_code as varchar(12)) as ppl_code&#xA; , cast ( issues.name as varchar(100))  as title&#xA;, cast (issues.cri_code as varchar(100) ) as cri_code&#xA;, cast ( issues.full_name as varchar(100) ) as assignedToResource&#xA;, cast ( issues.description as varchar(1000) ) as discussion&#xA;, cast ( issues.resp_email as varchar (50) ) as resp_email&#xA;, 1 as 'count'&#xA;&#xA;&#xA;from dim_mapped_projects p &#xA;cross apply &#xA;(&#xA;&#x9;SELECT * FROM [dbo].[uf_getIssues] (&#xA;   p.ppl_code) &#xA;) issues  &#xA;&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;"
          SQLTask:TypeConversionMode="None" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Drop and Create dim_mapped_projects view"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{97779D02-FF94-4A76-8598-AC8ADD948FB2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Drop and Create dim_mapped_projects view"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1D394D16-EE13-4191-9506-61ACCBD1394F}"
          SQLTask:SqlStatementSource="USE [HCAPROD_Copy]&#xA;&#xA;&#xA;drop view  [dbo].[dim_mapped_projects] &#xA;&#xA;go&#xA;&#xA;create VIEW [dbo].[dim_mapped_projects] &#xA;AS &#xA;&#xA;&#x9;WITH mapped_projects AS (&#xA;&#x9;SELECT distinct pe.[short_name]&#xA;      ,pe.[ppl_code]&#xA;         , s.[description] as 'Perview PM'&#xA;&#x9;FROM   [HCAPROD_Copy].[ip].[planning_entity] pe&#xA;&#x9;INNER JOIN [HCAPROD_Copy].[ip].[structure] s on pe.code180 = s.structure_code&#xA;&#x9;) &#xA;&#x9;,&#xA;&#x9;projectSetup&#xA;&#x9;AS&#xA;&#x9;(&#xA;&#xA;&#x9;&#x9;SELECT DISTINCT &#xA;&#x9;&#x9;&#x9;&#x9;pe.[ppl_code]&#xA;&#x9;&#x9;&#x9;  , pe.[short_name] AS 'work_id'&#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] FROM hcaprod_copy.ip.structure s WHERE s.structure_code =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(SELECT st.anc_code FROM hcaprod_copy.ip.structure_tree st WHERE st.anc_depth = 5 AND st.dsc_code = pe.ppl_code)) AS 'Work_Department'&#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] FROM hcaprod_copy.ip.structure s WHERE s.structure_code = pe.code22) AS 'Project_Category' &#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] FROM hcaprod_copy.ip.structure s WHERE s.structure_code = pe.code20) AS 'Project_Status'&#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] FROM hcaprod_copy.ip.structure s WHERE s.structure_code = pe.code28) AS 'Lifecycle_Stage'&#xA;&#x9;&#x9;&#x9;  ,(select s.description from hcaprod_copy.ip.structure s where pe.code709 = s.structure_code) AS 'PM Assessed Project Health'&#xA;&#x9;&#x9;&#x9;  , (SELECT&#x9;lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE&#x9;lt.key1 = 'PE01' AND lt.key2 = pe.[ppl_code]) AS 'Executive Summary'&#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] from hcaprod_copy.ip.structure s WHERE s.structure_code = pe.codewr31) AS 'Business Owner' &#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] from hcaprod_copy.ip.structure s WHERE s.structure_code = pe.codewr30) AS 'Project Sponsor'&#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] from hcaprod_copy.ip.structure s WHERE s.structure_code = pe.codewr37) AS 'Executive Sponsor'&#xA;&#x9;&#x9;&#x9;  , (SELECT s.[description] FROM hcaprod_copy.ip.structure s WHERE s.structure_code = pe.codewr33) AS 'Product Owner'&#x9;&#xA;&#x9;&#x9;&#x9;  , (SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'hca_var_com' AND lt.key2 = pe.[ppl_code]) AS 'Variance Comment'&#xA;&#x9;&#x9;&#x9;  , (SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'rpm_assess_descr' AND lt.key2 = pe.[ppl_code]) AS 'Current Status'&#xA;&#x9;&#x9;&#x9;  , (SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'rpm_key_actual' AND lt.key2 = pe.[ppl_code]) AS 'Key_Accomplishments'&#xA;&#x9;&#x9;&#x9;  , (SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'rpm_key_planned' AND lt.key2 = pe.[ppl_code]) AS 'Future_Deliverables'&#xA;&#x9;&#x9;&#x9;  --, (SELECT lt.line_text FROM hcaprod_copy.[ip].[long_text] lt WHERE lt.key1 = 'CRI_DESC1' AND lt.key2 = pe.[ppl_code]) AS 'changes'&#xA;&#xA;&#x9;&#x9;&#x9; -- , (SELECT substring (s.[description],1, CharIndex(',',s.[description]))  from hcaprod_copy.ip.structure s WHERE s.structure_code = pe.codewr31) AS 'boo Owner' &#xA;&#xA;&#x9;&#x9;FROM&#x9;[hcaprod_copy].[ip].[planning_entity] pe&#xA;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.structure s ON pe.planning_code = s.structure_code &#xA;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.structure_tree st ON s.structure_code = st.dsc_code &#xA;&#x9;&#x9;INNER JOIN mapped_projects mp ON pe.ppl_code = mp.ppl_code&#xA;&#x9;&#x9;--inner Join mapperDB.dbo.PlanViewProjects m&#xA;&#x9;&#x9;--on  pe.[ppl_code] = m.ppl_code&#xA;&#x9;&#x9;WHERE&#x9;1 = 1&#xA;&#x9;&#x9;&#x9;&#x9;--and st.anc_code IN ('3017', '232', '7849')&#xA;&#x9;&#x9;&#x9;&#x9;--and st.anc_depth = 3   --- depth for all Parallon Projects &#xA;&#x9;&#x9;&#x9;&#x9;--and pe.ppl_code IS NOT NULL &#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9;)&#xA;&#x9;,&#xA;&#xA;&#xA;&#x9;planning_baseline &#xA;&#x9;AS&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT spe.[baseline_code]&#xA;&#x9;&#x9;&#x9;  ,b.active as 'active_baseline'&#xA;&#x9;&#x9;&#x9;  ,spe.[planning_code]&#xA;&#x9;&#x9;&#x9;  ,pe.ppl_code&#xA;&#x9;&#x9;&#x9;  ,spe.[percent_complete]&#xA;&#x9;&#x9;&#x9;  ,spe.[milestone]&#xA;&#x9;&#x9;&#x9;  ,[baseline_du]&#xA;&#x9;&#x9;&#x9;  ,[baseline_finish]&#xA;&#x9;&#x9;&#x9;  ,[baseline_start]&#xA;&#x9;&#x9;&#x9;  ,[baseline_effort]&#xA;&#x9;&#x9;FROM   [hcaprod_copy].[ip].[st_planning_entity] spe&#xA;&#x9;&#x9;&#x9;   LEFT JOIN hcaprod_copy.ip.baseline b ON spe.baseline_code = b.baseline_code&#xA;&#x9;&#x9;&#x9;   INNER JOIN hcaprod_copy.ip.planning_entity pe ON spe.planning_code = pe.planning_code&#xA;&#x9;&#x9;WHERE  b.active = 'Y' &#xA;&#x9;)&#xA;&#x9;,&#xA;&#xA;&#x9;--------------------------------------------------------------------------------------------------------&#xA;&#x9;------------------------- Original Start and Finish Dates ----------------------------------------------&#xA;&#x9;min_baseline AS (&#xA;&#xA;&#x9;select a.structure_code&#xA;&#x9;&#x9; , (select description from hcaprod_copy.ip.structure where structure_code = b.structure_code) as 'project'&#xA;&#x9;&#x9; , a.baseline_code&#xA;&#x9;&#x9; , a.creation_date&#xA;&#x9;&#x9; , a.[description]&#xA;&#x9;from (&#xA;&#x9;&#x9;select&#x9;&#x9;structure_code, min(creation_date) as 'min_creation_date'&#xA;&#x9;&#x9;from&#x9;&#x9;[hcaprod_copy].[ip].[baseline] &#xA;&#x9;&#x9;group by&#x9;structure_code&#xA;&#x9;) as b &#xA;&#x9;inner join [hcaprod_copy].[ip].[baseline] a ON b.structure_code = a.structure_code AND b.min_creation_date = a.creation_date&#xA;&#x9;--WHERE  b.structure_code IN (select ppl_code FROM hcaprod_copy.dbo.dim_project)&#xA;&#xA;&#x9;),&#xA;&#xA;&#x9;original_dates AS (&#xA;&#x9;SELECT spe.[baseline_code]&#xA;&#x9;&#x9;  ,spe.[planning_code]&#xA;&#x9;&#x9;  ,mb.project&#xA;&#x9;&#x9;  ,[baseline_finish] as 'original_finish_date'&#xA;&#x9;&#x9;  ,[baseline_start] as 'original_start_date'&#xA;&#x9;FROM   [hcaprod_copy].[ip].[st_planning_entity] spe&#xA;&#x9;INNER JOIN&#x9;min_baseline mb ON spe.baseline_code = mb.baseline_code AND spe.planning_code = mb.structure_code &#xA;&#x9;),&#xA;--------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#x9;strategies&#xA;&#x9;AS &#xA;&#x9;(&#xA;&#x9;SELECT  pe.[strategy_code]&#xA;&#x9;&#x9;  , (select description from hcaprod_copy.ip.structure where strategy_code = structure_code) as 'strategy'&#xA;&#x9;&#x9;  , pe.[planning_code]&#xA;&#x9;FROM    [hcaprod_copy].[ip].[epm_strat_work] pe&#xA;&#x9;INNER JOIN hcaprod_copy.ip.structure s ON pe.planning_code = s.structure_code &#xA;&#x9;INNER JOIN hcaprod_copy.ip.structure_tree st ON s.structure_code = st.dsc_code &#xA;&#x9;WHERE&#x9;1 = 1&#xA;&#x9;&#x9;&#x9;and st.anc_code IN ('3017', '232', '7849')&#xA;&#x9;&#x9;&#x9;and st.anc_depth = 3   --- depth for all Parallon Projects &#xA;&#x9;&#x9;&#x9;--and strategy_code = '298593'&#xA;&#x9;),&#xA;&#xA;&#xA;&#xA;&#x9;ProjectData &#xA;&#x9;AS&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT&#x9;DISTINCT &#xA;&#x9;&#x9;&#x9;&#x9;fpp.ppl_code&#xA;&#x9;&#x9;&#x9;  , fpp.Work_ID&#xA;&#x9;&#x9;&#x9;  , fpp.Work_Department&#xA;&#x9;&#x9;&#x9;  , CASE WHEN fpp.Project_Category = 'Base Project' THEN 'BASE' ELSE SUBSTRING(fpp.Work_Department,7,3) END AS Dept&#xA;&#x9;&#x9;&#x9;  , CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN fpp.Project_Category = 'Base Project' THEN 'BASE'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '800' THEN '8900'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '801' THEN 'Credentialing'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '802' THEN 'PSC'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '803' THEN 'Implementations'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '804' THEN 'HCA'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '805' THEN 'Sales &amp; Marketing'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '806' THEN 'Point Solutions [TOG]'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '807' THEN 'HIM'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN SUBSTRING(fpp.Work_Department,7,3) = '808' THEN 'Project Services'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE 'Unknown'&#xA;&#x9;&#x9;&#x9;&#x9;END AS ProjectType&#xA;&#x9;&#x9;&#x9;  , fpp.Project_Status&#xA;&#x9;&#x9;&#x9;  , fpp.[PM Assessed Project Health]&#xA;&#x9;&#x9;&#x9;  , fpp.Lifecycle_Stage&#xA;&#x9;&#x9;&#x9;  , fpp.[Executive Summary]&#xA;&#x9;&#x9;&#x9;  , fpp.[Business Owner]&#xA;&#x9;&#x9;&#x9;  , fpp.[Project Sponsor]&#xA;&#x9;&#x9;&#x9;  , fpp.[Executive Sponsor]&#xA;&#x9;&#x9;&#x9;  , fpp.[Product Owner]&#xA;&#x9;&#x9;&#x9;  , fpp.[Variance Comment]&#xA;&#x9;&#x9;&#x9;  , fpp.[Current Status]&#xA;&#x9;&#x9;&#x9;  , fpp.[Key_Accomplishments]&#xA;&#x9;&#x9;&#x9;  , fpp.[Future_Deliverables]&#xA;&#x9;&#x9;FROM&#x9;projectSetup fpp&#xA;&#x9;)&#xA;&#x9;,&#xA;&#xA;&#x9;Projects &#xA;&#x9;AS   -- all parallon BPG projects&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT&#x9;st.anc_code  &#xA;&#x9;&#x9;&#x9;  , st.dsc_code AS planning_code&#xA;&#x9;&#x9;&#x9;  , s.[description] AS project_name&#xA;&#x9;&#x9;&#x9;  , pd.ppl_code&#xA;&#x9;&#x9;&#x9;  , pd.Work_ID AS [Project ID]&#xA;&#x9;&#x9;&#x9;  , pd.Work_Department&#xA;&#x9;&#x9;&#x9;  , pd.Dept&#xA;&#x9;&#x9;&#x9;  , pd.ProjectType&#xA;&#x9;&#x9;&#x9;  , pd.Project_Status&#xA;&#x9;&#x9;&#x9;  , pd.[PM Assessed Project Health]&#xA;&#x9;&#x9;&#x9;  , CAST(pd.Lifecycle_Stage as varchar(255)) as 'Lifecycle_Stage'&#xA;&#x9;&#x9;&#x9;  , REPLACE(pd.[Executive Summary], '?', '') as 'Executive Summary'&#xA;&#x9;&#x9;&#x9;  , pd.[Business Owner]&#xA;&#x9;&#x9;&#x9;  , pd.[Project Sponsor]&#xA;&#x9;&#x9;&#x9;  , pd.[Executive Sponsor]&#xA;&#x9;&#x9;&#x9;  , pd.[Product Owner]&#xA;&#xA;&#x9;&#x9;&#x9;  , (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;CASE WHEN iu.full_name IS NULL THEN NULL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN CHARINDEX('(', full_name) = 0 THEN full_name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE SUBSTRING(full_name, 1, (CHARINDEX('(', full_name) - 1)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END AS proj_mgr&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.workflow wf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER join hcaprod_copy.ip.wf_team wt &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wf.workflow_id = wt.workflow_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.ip_user iu &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wt.user_name = iu.user_name &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;wf.planning_code = st.dsc_code &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND wt.lifecycle_role_code = '3'&#xA;&#x9;&#x9;&#x9;&#x9;) AS 'ProjectManager'&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;, (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;iu.[user_name]&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.workflow wf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER join hcaprod_copy.ip.wf_team wt &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wf.workflow_id = wt.workflow_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.ip_user iu &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wt.user_name = iu.user_name &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;wf.planning_code = st.dsc_code &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND wt.lifecycle_role_code = '3'&#xA;&#x9;&#x9;&#x9;&#x9;) AS [proj_mgr_34id] -- equals 3/4 id&#xA;&#xA;&#x9;&#x9;&#x9;  , (&#xA;&#x9;&#x9;&#x9;    SELECT&#x9;iu.[e_mail]&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.workflow wf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER join hcaprod_copy.ip.wf_team wt &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wf.workflow_id = wt.workflow_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.ip_user iu &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wt.user_name = iu.user_name &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;wf.planning_code = st.dsc_code &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND wt.lifecycle_role_code = '3'&#xA;&#x9;&#x9;&#x9;    ) AS [proj_mgr_email]&#xA;&#xA;&#x9;&#x9;&#x9;  , (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;CASE WHEN full_name IS NULL THEN NULL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN CHARINDEX('(', full_name) = 0 THEN full_name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE SUBSTRING(full_name, 1, (CHARINDEX('(', full_name) - 1)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END AS PMO_Contact&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.workflow wf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER join hcaprod_copy.ip.wf_team wt &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wf.workflow_id = wt.workflow_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.ip_user iu &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wt.user_name = iu.user_name &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;wf.planning_code = st.dsc_code &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND wt.lifecycle_role_code = '2825'&#xA;&#x9;&#x9;&#x9;&#x9;) AS 'PMO_Contact'&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;, (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;iu.[e_mail]&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.workflow wf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER join hcaprod_copy.ip.wf_team wt &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wf.workflow_id = wt.workflow_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.ip_user iu &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wt.user_name = iu.user_name &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;wf.planning_code = st.dsc_code &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND wt.lifecycle_role_code = '2825'&#xA;&#x9;&#x9;&#x9;&#x9;) AS 'PMO_email'&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;, (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;iu.[user_name]&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.workflow wf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER join hcaprod_copy.ip.wf_team wt &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wf.workflow_id = wt.workflow_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.ip_user iu &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wt.user_name = iu.user_name &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;wf.planning_code = st.dsc_code &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND wt.lifecycle_role_code = '2825'&#xA;&#x9;&#x9;&#x9;&#x9;) AS 'PMO_34id'&#xA;&#xA;&#x9;&#x9;&#x9;  , (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;CASE WHEN full_name IS NULL THEN NULL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN CHARINDEX('(', full_name) = 0 THEN full_name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE SUBSTRING(full_name, 1, (CHARINDEX('(', full_name) - 1)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END AS PortfolioManager&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.workflow wf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER join hcaprod_copy.ip.wf_team wt &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wf.workflow_id = wt.workflow_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.ip_user iu &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON wt.user_name = iu.user_name &#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;wf.planning_code = st.dsc_code &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND wt.lifecycle_role_code = '17652'&#xA;&#x9;&#x9;&#x9;&#x9;) AS 'PortfolioManager'&#xA;&#xA;&#x9;&#x9;&#x9;  ---------- Overdue Tasks ----------&#xA;&#x9;&#x9;&#x9;  --, LTRIM(RTRIM(STUFF(( SELECT '|' + CAST(t3.task_id AS varchar(15)) + ' - ' + CAST(t3.task_name AS varchar(100)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;FROM hcaprod_copy.dbo.[uf_getOverDueTasks](pd.ppl_code) t3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;WHERE 1=1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;GROUP BY t3.task_name, t3.task_id, t3.baseline_finish_date&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;ORDER BY t3.task_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;FOR XML PATH('')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;), 1, 1, ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;))) AS [OverDueTasks]&#xA;&#xA;&#x9;&#x9;&#x9;  &#x9;, LTRIM(RTRIM(STUFF(( SELECT '|' + CAST(t3.task_id AS varchar(15)) + ' - ' + CAST(t3.task_name AS varchar(100)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM hcaprod_copy.dbo.overdue_tasks t3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE pd.ppl_code = t3.ppl_code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY t3.task_name, t3.task_id, t3.baseline_finish_date&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY t3.task_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR XML PATH('')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;), 1, 1, ''&#xA;&#x9;&#x9;&#x9;&#x9;))) AS [OverDueTasks]&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;---- Upcoming Key Dates ---- &#xA;&#x9;&#x9;&#x9;&#x9;, LTRIM(RTRIM(STUFF(( SELECT '|' + CAST(t3.task_description AS varchar(250)) + ' - ' + CAST(t3.schedule_start AS varchar(100)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM hcaprod_copy.dbo.bpg_milestones t3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE pd.ppl_code = t3.ppl_code AND ([Parent Task] = 'Key Date Milestones' OR [Parent Task] = 'Key Upcoming Dates')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY t3.task_id, t3.task_description, t3.schedule_start&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY t3.task_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR XML PATH('')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;), 1, 1, ''&#xA;&#x9;&#x9;&#x9;&#x9;))) AS [UpcomingKeyDates]&#xA;&#x9;&#x9;&#x9;  ------------ Overdue Milestones ----------&#xA;&#x9;&#x9;&#x9;  --, LTRIM(RTRIM(STUFF(( SELECT '|' + CAST(t3.task_id AS varchar(15)) + ' - ' + CAST(t3.milestone_name AS varchar(100))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;FROM hcaprod_copy.dbo.[uf_getOverDueMilestones](pd.ppl_code) t3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;WHERE 1=1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;GROUP BY t3.milestone_name, t3.scheduled_finish_date, t3.task_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;ORDER BY t3.task_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;FOR XML PATH('')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;),1, 1, ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;))) AS [OverDueMilestones]&#xA;&#xA;&#x9;&#x9;&#x9;  ---------- Open Issues --------------------------&#xA;&#x9;&#x9;&#x9;  , LTRIM(RTRIM(STUFF(( SELECT '|' + CAST(t4.[name] AS varchar(55))  + ': ' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ CAST(t4.[full_name] AS varchar(100)) + ' - ' + CAST(t4.[description] AS varchar(300)) + ' - ' + CAST(t4.resp_email AS varchar(55))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM hcaprod_copy.dbo.[uf_getIssues](pd.ppl_code) t4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE 1=1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY t4.[name], t4.[full_name], t4.[description], t4.[cri_code], t4.resp_email&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY t4.cri_code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR XML PATH('')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;), 1, 1, ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;))) AS [Issues]&#xA;&#xA;&#x9;&#x9;&#x9;  ---------- Open Risks --------------------------&#xA;&#x9;&#x9;&#x9;  , LTRIM(RTRIM(STUFF(( SELECT '|' + CAST(t4.[name] AS varchar(55)) + ': ' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ CAST(t4.[full_name] AS varchar(100)) + ' - ' + CAST(t4.[description] AS varchar(300)) + ' - ' + CAST(t4.resp_email AS varchar(55)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM hcaprod_copy.dbo.[uf_getRisks](pd.ppl_code) t4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE 1=1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY t4.[name], t4.full_name, t4.[description], t4.[cri_code], t4.resp_email &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY t4.cri_code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR XML PATH('')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;), 1, 1, ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;))) AS [Risks]&#xA;&#x9;&#x9;&#x9;  --, LTRIM(RTRIM(STUFF(( SELECT '|' + CAST(t4.[project_name] AS varchar(55)) + ': ' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;+ CAST(t4.[full_name] AS varchar(100)) + ' - ' + CAST(t4.[description] AS varchar(300)) + ' - ' + CAST(t4.resp_email AS varchar(55)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;FROM hcaprod_copy.dbo.[uf_getChangeRequests](pd.ppl_code) t5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;WHERE 1=1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;GROUP BY t5.[project_name], t5.full_name, t5.[description], t5.[cri_code], t5.resp_email &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;ORDER BY t4.cri_code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;FOR XML PATH('')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;), 1, 1, ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;))) AS [change_requests]&#xA;&#xA;&#x9;&#x9;&#x9;--  , CAST(ISNULL(pe.actual_finish,'2999-12-31') AS DATE) AS Actual_Finish_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pe.actual_finish AS DATE) AS Actual_Finish_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pe.actual_start AS DATE) AS Actual_Start_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pe.schedule_start AS DATE) AS Schedule_Start_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pe.schedule_finish AS DATE) AS Schedule_Finish_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pe.forecast_start AS DATE) AS Forecast_Start_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pe.forecast_finish AS DATE) AS Forecast_Finish_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pb.baseline_start AS DATE) AS Baseline_Start_Date&#xA;&#x9;&#x9;&#x9;  , CAST(pb.baseline_finish AS DATE) AS Baseline_Finish_Date&#xA;&#x9;&#x9;&#x9;  , CAST(od.original_start_date AS DATE) AS Original_Start_Date&#xA;&#x9;&#x9;&#x9;  , CAST(od.original_finish_date AS DATE) AS Original_Finish_Date&#xA;&#x9;&#x9;&#x9;  , pe.percent_complete&#xA;&#x9;&#x9;&#x9;  , REPLACE(REPLACE(pd.[Variance Comment], '\n', '|'), '•', '') as 'Variance Comment'&#xA;&#x9;&#x9;&#x9;  , pd.[Current Status]&#xA;&#x9;&#x9;&#x9;  , REPLACE(REPLACE(pd.[Key_Accomplishments], '\n', '|'), '•', '•') as 'Key_Accomplishments'&#xA;&#x9;&#x9;&#x9;  , REPLACE(REPLACE(pd.[Future_Deliverables], '\n', '|'), '•', '•') as 'Future_Deliverables'&#xA;&#x9;&#x9;&#x9;  , (select description from hcaprod_copy.ip.structure where stg.strategy_code = structure_code) as 'Strategy'&#xA;&#x9;&#x9;FROM&#x9;hcaprod_copy.ip.structure_tree st &#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN hcaprod_copy.ip.structure s &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON st.dsc_code = s.structure_code&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN ProjectData pd&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON pd.ppl_code = st.dsc_code&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN hcaprod_copy.ip.planning_entity pe&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON pe.planning_code = st.dsc_code&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN planning_baseline pb &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON st.dsc_code = pb.planning_code&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN [hcaprod_copy].[ip].[epm_strat_work] stg &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON st.dsc_code = stg.planning_code AND stg.percentage_share &gt; 0&#xA;&#x9;&#x9;&#x9;&#x9;LEFT JOIN original_dates od &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON st.dsc_code = od.planning_code&#xA;&#x9;&#x9;&#x9;&#x9;--inner Join PerViewDataMart.dbo.Mapping m &#xA;&#x9;&#x9;&#x9;&#x9;--&#x9;on  pd.[ppl_code] = m.ppl_code&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN mapped_projects mp ON st.dsc_code = mp.ppl_code&#xA;&#x9;&#x9;WHERE&#x9;1 = 1&#xA;&#x9;&#x9;&#x9;&#x9;and st.anc_code IN ('3017', '232', '7849')&#xA;&#x9;&#x9;&#x9;&#x9;AND s.depth = 6    -- 124 rows&#xA;&#x9;),&#xA;&#xA;&#x9;final_setup AS (&#xA;&#x9;SELECT&#x9;DISTINCT&#xA;&#x9;&#x9;&#x9;p.planning_code AS [Plan ID]&#xA;&#x9;&#x9;  , p.ppl_code&#xA;&#x9;&#x9;  , p.[Project ID]&#xA;&#x9;&#x9;  , p.project_name&#xA;&#x9;&#x9;  , p.ProjectManager AS proj_mgr&#xA;&#x9;&#x9;  , p.[proj_mgr_34id]&#xA;&#x9;&#x9;  , p.[proj_mgr_email]&#xA;&#x9;&#x9;  , p.PMO_Contact&#xA;&#x9;&#x9;  , p.PMO_email&#xA;&#x9;&#x9;  , p.PMO_34id &#xA;&#x9;&#x9;  , CASE WHEN p.proj_mgr_email = p.PMO_email THEN p.proj_mgr_email&#xA;&#x9;&#x9;&#x9;&#x9; ELSE ( p.proj_mgr_email + '; ' + p.PMO_email ) END AS 'project_emails'&#xA;&#x9;&#x9;  , p.PortfolioManager&#xA;&#x9;&#x9;  , p.[Business Owner] AS BusinessOwner&#xA;&#x9;&#x9;  , p.[Executive Sponsor] AS ExecutiveSponsor&#xA;&#x9;&#x9;  , p.[Project Sponsor] AS ProjectSponsor&#xA;&#x9;&#x9;  , p.[Product Owner] AS ProductOwner&#xA;--&#x9;&#x9;  , CAST(NULL AS VARCHAR(50)) AS ProductOwner&#xA;&#x9;&#x9;  , CASE WHEN p.Work_Department like '26122-800%' THEN STUFF([Work_Department], 1, 10, '')&#xA;&#x9;&#x9;&#x9;&#x9; WHEN p.Work_Department not like '26122-800%' THEN STUFF([Work_Department], 1, 12, '')&#xA;&#x9;&#x9;&#x9;&#x9; ELSE NULL END as 'Work_Department'&#xA;&#x9;&#x9;  , p.Dept&#xA;&#x9;&#x9;  , CASE --WHEN p.ProjectType = 'Physician Services (PSC)' THEN 'PSC' &#xA;&#x9;&#x9;&#x9;&#x9; WHEN p.ProjectType IS NULL THEN 'Unknown'&#xA;&#x9;&#x9;&#x9;&#x9; ELSE P.ProjectType&#xA;&#x9;&#x9;&#x9;END AS ProjectType&#xA;&#x9;&#x9;  , p.Project_Status&#xA;&#x9;&#x9;  , p.[PM Assessed Project Health]&#xA;&#x9;&#x9;  , p.Lifecycle_Stage&#xA;&#x9;&#x9;  , p.Strategy&#xA;&#x9;&#x9;  , p.[Executive Summary]&#xA;&#x9;&#x9;  , 'continuing' AS investment_type&#xA;&#x9;&#x9;  , p.Actual_Start_Date&#xA;&#x9;&#x9;  , p.Actual_Finish_Date&#xA;&#x9;&#x9;  , p.Schedule_Start_Date&#xA;&#x9;&#x9;  , p.Schedule_Finish_Date&#xA;&#x9;&#x9;  , p.Forecast_Start_Date&#xA;&#x9;&#x9;  , p.Forecast_Finish_Date&#xA;&#x9;&#x9;  , p.Baseline_Start_Date&#xA;&#x9;&#x9;  , p.Baseline_Finish_Date&#xA;&#x9;&#x9;  , p.Original_Start_Date&#xA;&#x9;&#x9;  , p.Original_Finish_Date&#xA;&#x9;&#x9;  , ISNULL(p.percent_complete,' ' ) AS percent_complete&#xA;&#x9;&#x9;  , CAST(p.[OverDueTasks] as varchar(4000)) as 'OverDueTasks'&#xA;&#x9;&#x9;  , CAST(p.[UpcomingKeyDates] as varchar(4000)) as 'UpcomingKeyDates'&#xA;&#x9;&#x9;  --, p.[OverDueMilestones]&#xA;&#x9;&#x9;  , NULL as 'OverDueMilestones'&#xA;&#x9;&#x9;  , p.[Issues]&#xA;&#x9;&#x9;  , p.[Risks]&#xA;&#x9;&#x9;  , CASE WHEN RIGHT(p.[Variance Comment],1) = '|' THEN REPLACE(REPLACE( p.[Variance Comment], RIGHT(p.[Variance Comment], 1), '' ), 'Overall Variance', '|Overall Variance')&#xA;&#x9;&#x9;&#x9;&#x9; ELSE p.[Variance Comment] END AS 'Variance Comment'&#xA;&#x9;&#x9;  , p.[Current Status]&#xA;&#x9;&#x9;  , p.Key_Accomplishments&#xA;&#x9;&#x9;  , p.Future_Deliverables&#xA;&#x9;&#x9;  --, p.change_requests&#xA;&#x9;FROM&#x9;Projects p&#xA;&#x9;)&#xA;&#xA;SELECT&#x9;&#x9;  cast (sys.fn_varbintohexsubstring(0, HashBytes('SHA1', CAST(ppl_code AS char(40))), 1, 0) as char(42))  as puid&#xA;&#x9;, [Plan ID]&#xA;&#x9;&#x9;  , cast (  ppl_code as varchar(55) ) as ppl_code&#xA;&#x9;&#x9;  , [Project ID] &#xA;&#x9;&#x9;  , cast ('Planview' as varchar(12) ) as epm_platform&#xA;&#x9;&#x9;  , project_name&#xA;&#x9;&#x9;  , proj_mgr&#xA;&#x9;&#x9;  , proj_mgr_34id&#xA;&#x9;&#x9;  , proj_mgr_email&#xA;&#x9;&#x9;  , PMO_Contact&#xA;&#x9;&#x9;  , PMO_email&#xA;&#x9;&#x9;  , PMO_34id&#xA;&#x9;&#x9;  , project_emails&#xA;&#x9;&#x9;  , PortfolioManager&#xA;&#x9;&#x9; -- , BusinessOwner&#xA;&#x9;&#x9;   , isNull( SUBSTRING (BusinessOwner, CHARINDEX(',',BusinessOwner) + 2, 8000 ) &#xA;&#x9;&#x9;   + ' ' + SUBSTRING (BusinessOwner, 0, CHARINDEX(',',BusinessOwner) ),N'&lt;No Business Owner&gt;')       as BusinessOwner&#xA;&#x9;&#x9;  --, charindex(&#xA;&#x9;&#x9;  --,  isnull(ExecutiveSponsor,'N&lt;No Project Sponsor&gt;')   as ProjectSponsorc   -- note this is analagous to perview project sponsor&#xA;&#xA;&#x9;&#x9;  , isnull( SUBSTRING (ExecutiveSponsor, CHARINDEX(',',ExecutiveSponsor) + 2, 8000 ) &#xA;&#x9;&#x9;   + ' ' + SUBSTRING (ExecutiveSponsor, 0, CHARINDEX(',',ExecutiveSponsor) ), N'&lt;No Project Sponsor&gt;') as ProjectSponsor&#xA;&#x9;&#x9;  , ProjectSponsor  as ProjectSponsor_PlanView&#xA;&#x9;&#x9;  , ProductOwner&#xA;&#x9;&#x9;  , Work_Department&#xA;&#x9;&#x9;  , Dept&#xA;&#x9;&#x9;  , ProjectType&#xA;&#x9;&#x9;  , Project_Status&#xA;&#x9;&#x9;  , [PM Assessed Project Health]&#xA;&#x9;&#x9;  , Lifecycle_Stage&#xA;&#x9;&#x9;  , Strategy&#xA;&#x9;&#x9;  , [Executive Summary]&#xA;&#x9;&#x9;  , investment_type&#xA;&#x9;&#x9;  , Actual_Start_Date&#xA;&#x9;&#x9;  , Actual_Finish_Date&#xA;&#x9;&#x9;  , Schedule_Start_Date&#xA;&#x9;&#x9;  , Schedule_Finish_Date&#xA;&#x9;&#x9;  , Forecast_Start_Date&#xA;&#x9;&#x9;  , Forecast_Finish_Date&#xA;&#x9;&#x9;  , Baseline_Start_Date&#xA;&#x9;&#x9;  , Baseline_Finish_Date&#xA;&#x9;&#x9;  , Original_Start_Date&#xA;&#x9;&#x9;  , Original_Finish_Date&#xA;&#x9;&#x9;  , percent_complete&#xA;&#x9;&#x9;  , OverDueTasks&#xA;&#x9;&#x9;  , UpcomingKeyDates&#xA;&#x9;&#x9;  , OverDueMilestones&#xA;&#x9;&#x9;  , Issues&#xA;&#x9;&#x9;  , Risks&#xA;&#x9;&#x9;  , [Variance Comment]&#xA;&#x9;&#x9;  , [Current Status]&#xA;&#x9;&#x9;  , [Key_Accomplishments]&#xA;&#x9;&#x9;  , [Future_Deliverables]&#xA;&#x9;&#x9;  --, [change_requests]&#xA;FROM&#x9;&#x9;final_setup&#xA;&#xA;&#xA;&#xA;&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7045C293-7FC3-43BB-A19E-E601911E9364}"
      DTS:From="Package\SQL Create PlanView Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\SQL Create fact_bpg_task_summary View" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{5BE5CCFE-E833-4574-85E0-D8354C54E1F4}"
      DTS:From="Package\SQL Create fact_bpg_task_summary View"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\SQL Create overdue_tasks view" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{0CDC4E80-9440-4FAE-9C0F-E3DF28614BE4}"
      DTS:From="Package\SQL Create overdue_tasks view"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\SQL Create bpg_milestones view" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{9265BEC5-FB1C-4982-82E6-34BC0F549EB8}"
      DTS:From="Package\SQL Drop and Create dim_mapped_projects view"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\SQL Create dim_task View" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{7402C64E-26D1-4591-9D65-127A1BD15F51}"
      DTS:From="Package\SQL Create bpg_milestones view"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\SQL Create Intermediate Functions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{1BC0812B-5C20-48B0-A6D5-DF29AEFFAB1B}"
      DTS:From="Package\SQL Create Intermediate Functions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\SQL Drop and Create dim_mapped_projects view" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="235,42"
          Id="Package\SQL Create bpg_milestones view"
          TopLeft="188,246" />
        <NodeLayout
          Size="205,42"
          Id="Package\SQL Create dim_task View"
          TopLeft="219,482" />
        <NodeLayout
          Size="266,42"
          Id="Package\SQL Create fact_bpg_project_summary"
          TopLeft="589,161" />
        <NodeLayout
          Size="278,42"
          Id="Package\SQL Create fact_bpg_task_summary View"
          TopLeft="164,101" />
        <NodeLayout
          Size="246,42"
          Id="Package\SQL Create Intermediate Functions"
          TopLeft="186,318" />
        <NodeLayout
          Size="230,42"
          Id="Package\SQL Create overdue_tasks view"
          TopLeft="188,172" />
        <NodeLayout
          Size="213,42"
          Id="Package\SQL Create PlanView Tables"
          TopLeft="192,25" />
        <NodeLayout
          Size="244,42"
          Id="Package\SQL Create Risks and Issues views"
          TopLeft="591,249" />
        <NodeLayout
          Size="313,42"
          Id="Package\SQL Drop and Create dim_mapped_projects view"
          TopLeft="171,397" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="300.75,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="303,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="304.25,214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="324.5,439">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="307.25,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="309,360">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.5,37"
              Start="0,0"
              End="18.5,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5"
                    Point2="0,18.5"
                    Point3="4,18.5" />
                  <mssgle:LineSegment
                    End="14.5,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="14.5,18.5"
                    Point2="18.5,18.5"
                    Point3="18.5,22.5" />
                  <mssgle:LineSegment
                    End="18.5,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>